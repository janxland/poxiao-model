{"ast":null,"code":"import { ref, onMounted, watch } from 'vue';\nimport { Icon } from 'tdesign-icons-vue-next';\nimport * as d3 from 'd3';\nexport default {\n  __name: 'KnowledgeIndex',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const networkContainer = ref(null);\n    const atlasData = ref([]);\n    const activeAreas = ref('英语');\n    const contentData = ref({});\n    const fetchApiData = async () => {\n      try {\n        const response = await fetch('/api/reviewmaster/atlas/list');\n        const data = await response.json();\n        if (data.code === 200) {\n          atlasData.value = data.data;\n        }\n        console.log(data);\n      } catch (error) {\n        console.error('Error fetching API data:', error);\n      }\n    };\n    const buildGraphData = () => {\n      const data = {\n        nodes: [{\n          id: 1,\n          label: 'Node 1'\n        }, {\n          id: 2,\n          label: 'Node 2'\n        }, {\n          id: 3,\n          label: 'Node 3'\n        }],\n        links: [{\n          source: 1,\n          target: 2\n        }, {\n          source: 1,\n          target: 3\n        }]\n      };\n      const width = \"800\";\n      const height = \"600\";\n      const svg = d3.select(networkContainer.value).append('svg').attr('width', width).attr('height', height);\n      const simulation = d3.forceSimulation(data.nodes).force('link', d3.forceLink(data.links).id(d => d.id).distance(100) // 调整连接线的距离\n      ).force('charge', d3.forceManyBody().strength(-100)).force('center', d3.forceCenter(width / 2, height / 2)).force('collide', d3.forceCollide().radius(10).strength(100)); // 添加节点碰撞力\n\n      data.nodes.forEach((node, index) => {\n        node.x = simulation.nodes()[index].x;\n        node.y = simulation.nodes()[index].y;\n      });\n      const link = svg.selectAll('line').data(data.links).join('path').attr('stroke', 'gray').attr('fill', 'none');\n      const node = svg.selectAll('g').data(data.nodes).join('g').call(drag(simulation));\n      const circle = node.append('circle').attr('r', 5);\n      const text = node.append('text').text(d => d.label).style('font-size', '16px').style('fill', 'white').attr('text-anchor', 'middle').attr('dy', '0.35em');\n      node.each(function () {\n        const nodeWidth = this.getBBox().width + 3;\n        circle.attr('r', nodeWidth / 2);\n        text.attr('x', 0).attr('y', 0).attr('transform', `scale(${nodeWidth / 100},${nodeWidth / 100})`);\n      });\n      let nodeWeights = [];\n      data.links.forEach(link => {\n        let source = link.source.id;\n        if (!nodeWeights[source]) {\n          nodeWeights[source] = 0;\n        }\n        nodeWeights[source] += 1;\n      });\n      console.log(nodeWeights);\n      // 权重归一化\n      let maxValue = Math.max(...nodeWeights);\n      let minValue = Math.min(...nodeWeights);\n      nodeWeights = nodeWeights.map(weight => (weight - minValue) / (maxValue - minValue));\n      console.log(nodeWeights);\n      simulation.on('tick', () => {\n        link.attr('d', d => {\n          const path = d3.path();\n          path.moveTo(d.source.x, d.source.y);\n          path.quadraticCurveTo((d.source.x + d.target.x) / 2,\n          // 控制点的x坐标\n          d.source.y,\n          // 控制点的y坐标\n          d.target.x, d.target.y);\n          return path.toString();\n        });\n        node.attr('transform', d => `translate(${d.x},${d.y})`);\n        node.attr('fill', d => {\n          const nodeWeight = nodeWeights[d.id] || 0;\n          if (nodeWeight >= 0.8) {\n            return 'orange';\n          } else if (nodeWeight >= 0.5) {\n            return 'yellow';\n          } else {\n            return 'gray';\n          }\n        });\n      });\n      function drag(simulation) {\n        function dragstarted(event, d) {\n          if (!event.active) simulation.alphaTarget(0.3).restart();\n          d.fx = d.x;\n          d.fy = d.y;\n        }\n        function dragged(event, d) {\n          d.fx = event.x;\n          d.fy = event.y;\n        }\n        function dragended(event, d) {\n          if (!event.active) simulation.alphaTarget(0);\n          d.fx = null;\n          d.fy = null;\n        }\n        return d3.drag().on('start', dragstarted).on('drag', dragged).on('end', dragended);\n      }\n    };\n    const loadNetwork = () => {};\n    watch(activeAreas, newValue => {\n      console.log('activeAreas changed:', newValue);\n      contentData.value = atlasData.value.find(item => item.areasName === newValue);\n    });\n    onMounted(() => {\n      fetchApiData();\n      loadNetwork();\n      buildGraphData();\n    });\n    const __returned__ = {\n      networkContainer,\n      atlasData,\n      activeAreas,\n      contentData,\n      fetchApiData,\n      buildGraphData,\n      loadNetwork,\n      ref,\n      onMounted,\n      watch,\n      get Icon() {\n        return Icon;\n      },\n      get d3() {\n        return d3;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","Icon","d3","networkContainer","atlasData","activeAreas","contentData","fetchApiData","response","fetch","data","json","code","value","console","log","error","buildGraphData","nodes","id","label","links","source","target","width","height","svg","select","append","attr","simulation","forceSimulation","force","forceLink","d","distance","forceManyBody","strength","forceCenter","forceCollide","radius","forEach","node","index","x","y","link","selectAll","join","call","drag","circle","text","style","each","nodeWidth","getBBox","nodeWeights","maxValue","Math","max","minValue","min","map","weight","on","path","moveTo","quadraticCurveTo","toString","nodeWeight","dragstarted","event","active","alphaTarget","restart","fx","fy","dragged","dragended","loadNetwork","newValue","find","item","areasName"],"sources":["E:/project/vue3/pxqd/src/layout/KnowledgeIndex.vue"],"sourcesContent":["<template>\r\n  <div id=\"KnowledgeIndex\">\r\n    <t-layout>\r\n      <t-header class=\"menu-header\">\r\n        <t-head-menu value=\"item1\" class=\"font-small\" style=\"cursor:pointer;\">\r\n          <router-link to=\"index\">\r\n            <icon class=\"icon\" name=\"chevron-left\" color=\"#2F3CF4\" style=\"margin-right: 24px;font-size: 40px;\" />\r\n          </router-link>\r\n          知识图谱\r\n        </t-head-menu>\r\n      </t-header>\r\n      <t-layout>\r\n        <t-aside width=\"15%\" class=\"myexam-left-side\" style=\"border-top: 1px solid var(--component-border)\">\r\n          <t-menu v-model=\"activeAreas\" class=\"myexam-subjects-items\" theme=\"light\" value=\"dashboard\" style=\"margin-right: 74px;width:100%;border-radius: 0px 32px 0px 0px;\">\r\n            <t-menu-item class=\"subjects-item\" :class=\"{ active:activeAreas === areas.areasName }\" :key=\"index\" v-for=\"areas,index in atlasData\" :value=\"areas.areasName\">\r\n              <icon class=\"icon\" name=\"folder-1\" color=\"#2F3CF4\" style=\"margin:0 10px;font-size: 20px;\" />\r\n              <span style=\"flex: 1;\">{{ areas.areasName }}</span>\r\n              <icon class=\"icon edit-icon\" :class=\"{ active:activeAreas === areas.areasName }\" name=\"edit-2\" color=\"#2F3CF4\" style=\"margin:0 10px;font-size: 20px;\" />\r\n            </t-menu-item>\r\n            <t-menu-item class=\"subjects-item\"  value=\"创建新题库\">\r\n              <icon class=\"icon\" name=\"add-circle\" color=\"#2F3CF4\" style=\"margin: 0 10px;font-size: 20px;\"/>\r\n              <span>创建新题库</span></t-menu-item>\r\n          </t-menu>\r\n        </t-aside>\r\n        <t-layout>\r\n          <t-content>\r\n            <div class=\"knowledgeGraph-main-content\">\r\n              <div ref=\"networkContainer\" style=\"height: 800px;width:800px\"></div>\r\n            </div>\r\n          </t-content>\r\n          <t-footer></t-footer>\r\n        </t-layout>\r\n        <t-aside class=\"myexam-menu-side\" style=\"border-top: 1px solid var(--component-border)\">\r\n          <div title=\"出卷组题\" class=\"myexam-menu-side-item\"><icon title=\"出卷组题\" name=\"article\" ></icon></div>\r\n          <div title=\"二级——所有迁移\" class=\"myexam-menu-side-item\"><icon title=\"二级——所有迁移\" name=\"folder-import\" ></icon></div>\r\n          <div title=\"删除\" class=\"myexam-menu-side-item\"><icon title=\"删除\" name=\"delete\" ></icon></div>\r\n        </t-aside>\r\n        <t-aside class=\"myexam-date-side\" width=\"15%\" style=\"border-top: 1px solid var(--component-border)\">\r\n          \r\n        </t-aside>\r\n      </t-layout>\r\n    </t-layout>\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport {  ref,onMounted,watch  } from 'vue'\r\nimport { Icon } from 'tdesign-icons-vue-next';\r\nimport * as d3 from 'd3';\r\nconst networkContainer = ref(null);\r\n\r\nconst atlasData = ref([]);\r\nconst activeAreas = ref('英语');\r\n\r\nconst contentData = ref({});\r\nconst fetchApiData = async () => {\r\n  try {\r\n    const response = await fetch('/api/reviewmaster/atlas/list');\r\n    const data = await response.json();\r\n    if(data.code === 200) {\r\n      atlasData.value = data.data;\r\n    }\r\n    console.log(data);\r\n  } catch (error) {\r\n    console.error('Error fetching API data:', error);\r\n  }\r\n};\r\nconst buildGraphData = () =>  {\r\n  const data = {\r\n    nodes: [\r\n      { id: 1, label: 'Node 1' },\r\n      { id: 2, label: 'Node 2' },\r\n      { id: 3, label: 'Node 3' },\r\n    ],\r\n    links: [\r\n      { source: 1, target: 2 },\r\n      { source: 1, target: 3 },\r\n    ],\r\n  };\r\n\r\n  const width = \"800\";\r\n  const height = \"600\";\r\n\r\n  const svg = d3.select(networkContainer.value)\r\n    .append('svg')\r\n    .attr('width', width)\r\n    .attr('height', height);\r\n  const simulation =  d3.forceSimulation(data.nodes)\r\n    .force('link', d3.forceLink(data.links)\r\n      .id(d => d.id)\r\n      .distance(100) // 调整连接线的距离\r\n    )\r\n    .force('charge', d3.forceManyBody().strength(-100))\r\n    .force('center', d3.forceCenter(width / 2, height / 2))\r\n    .force('collide', d3.forceCollide().radius(10).strength(100)); // 添加节点碰撞力\r\n\r\n\r\n  data.nodes.forEach((node, index) => {\r\n    node.x = simulation.nodes()[index].x;\r\n    node.y = simulation.nodes()[index].y;\r\n  });\r\n\r\n  const link = svg.selectAll('line')\r\n  .data(data.links)\r\n  .join('path')\r\n  .attr('stroke', 'gray')\r\n  .attr('fill', 'none')\r\n    \r\n  const node = svg.selectAll('g')\r\n    .data(data.nodes)\r\n    .join('g')\r\n    .call(drag(simulation))\r\n\r\n  const circle = node.append('circle')\r\n    .attr('r', 5);\r\n\r\n  const text = node.append('text')\r\n    .text((d) => d.label)\r\n    .style('font-size', '16px')\r\n    .style('fill', 'white')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('dy', '0.35em');\r\n\r\n  node.each(function () {\r\n    const nodeWidth = this.getBBox().width + 3;\r\n    circle.attr('r', nodeWidth / 2);\r\n    text.attr('x', 0).attr('y', 0).attr('transform', `scale(${nodeWidth / 100},${nodeWidth / 100})`);\r\n  });\r\n  let nodeWeights = [];\r\n    data.links.forEach(link => {\r\n      let source = link.source.id;\r\n      if (!nodeWeights[source]) {\r\n        nodeWeights[source] = 0;\r\n      }\r\n      nodeWeights[source] += 1;\r\n    });\r\n\r\n    console.log(nodeWeights);\r\n  // 权重归一化\r\n  let maxValue = Math.max(...nodeWeights);\r\n  let minValue = Math.min(...nodeWeights);\r\n  nodeWeights = nodeWeights.map((weight) => (weight - minValue) / (maxValue - minValue));\r\n  console.log(nodeWeights);\r\n  simulation.on('tick', () => {\r\n    link.attr('d', (d) => {\r\n      const path = d3.path();\r\n      path.moveTo(d.source.x, d.source.y);\r\n      path.quadraticCurveTo(\r\n        (d.source.x + d.target.x) / 2, // 控制点的x坐标\r\n        d.source.y, // 控制点的y坐标\r\n        d.target.x, d.target.y\r\n      );\r\n      return path.toString();\r\n    });\r\n    node.attr('transform', (d) => `translate(${d.x},${d.y})`);\r\n    node.attr('fill', d => {\r\n      const nodeWeight = nodeWeights[d.id] || 0;\r\n        if (nodeWeight >= 0.8) {\r\n          return 'orange'; \r\n        } else if (nodeWeight >=  0.5) {\r\n          return 'yellow'; \r\n        } else {\r\n          return 'gray'; \r\n        }\r\n    });\r\n  });\r\n\r\n  function drag(simulation) {\r\n    function dragstarted(event, d) {\r\n      if (!event.active) simulation.alphaTarget(0.3).restart();\r\n      d.fx = d.x;\r\n      d.fy = d.y;\r\n    }\r\n\r\n    function dragged(event, d) {\r\n      d.fx = event.x;\r\n      d.fy = event.y;\r\n    }\r\n\r\n    function dragended(event, d) {\r\n      if (!event.active) simulation.alphaTarget(0);\r\n      d.fx = null;\r\n      d.fy = null;\r\n    }\r\n\r\n    return d3.drag()\r\n      .on('start', dragstarted)\r\n      .on('drag', dragged)\r\n      .on('end', dragended);\r\n  }\r\n}\r\nconst loadNetwork = () => {\r\n  \r\n}\r\nwatch(activeAreas, (newValue) => {\r\n  console.log('activeAreas changed:', newValue);\r\n  contentData.value = atlasData.value.find(item => item.areasName === newValue);\r\n});\r\nonMounted(() => {\r\n  fetchApiData()\r\n  loadNetwork()\r\n  buildGraphData()\r\n})\r\n\r\n</script>\r\n\r\n<style>\r\n.t-icon {\r\n  cursor: pointer;\r\n}\r\n#KnowledgeIndex {\r\n\r\n}\r\n#KnowledgeIndex .menu-header{\r\n  height: 82px;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 32px;\r\n}\r\n#KnowledgeIndex .menu-header .t-menu {\r\n  font-size: var(--td-size-7);\r\n}\r\n#KnowledgeIndex .t-menu__item {\r\n  user-select: none;\r\n  color:#000;\r\n  height:53px;\r\n  font-size: var(--td-size-6);\r\n  margin: 12.5px 0;\r\n  border: solid 1px  #4566FC;\r\n  border-radius: 16px;\r\n  transition: .3s;\r\n}\r\n#KnowledgeIndex .t-menu__item .t-menu__content {\r\n  display: flex;\r\n  width:100%;\r\n  align-items: center;\r\n}\r\n#KnowledgeIndex .t-menu__item.t-is-active,\r\n#KnowledgeIndex .t-menu__item:hover{\r\n  transition: .3s;\r\n  color:#fff;\r\n  opacity: 1;\r\n  border-radius: 16px;\r\n  background: linear-gradient(110.93deg, rgba(58, 71, 252, 0.9) 0%, rgba(43, 141, 252, 1) 100%);\r\n}\r\n#KnowledgeIndex .t-menu__item.t-is-active .icon ,\r\n#KnowledgeIndex .t-menu__item:hover .icon{\r\n  color:#fff;\r\n}\r\n#KnowledgeIndex .t-menu__item.t-is-active .edit-icon {\r\n  display: inline-block;\r\n}\r\n#KnowledgeIndex  .edit-icon {\r\n  display: none;\r\n}\r\n#KnowledgeIndex .myexam-left-side{\r\n  left: 0px;\r\n  opacity: 1;\r\n  position: sticky;\r\n  border-radius: 0px 32px 0px 0px;\r\n  padding-top: 25px;\r\n  min-height: 100vh;\r\n  background: rgba(255, 255, 255, 1);\r\n}\r\n#KnowledgeIndex  .knowledgeGraph-main-content {\r\n  background: #fff;\r\n  margin-left: 80px;\r\n  height: 100%;\r\n  padding: 20px 20px;\r\n  border-radius: 32px 32px 0px 0px;\r\n}\r\n\r\n#KnowledgeIndex .myexam-menu-side {\r\n  background: none;\r\n  position: sticky;\r\n  top: 54vh;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 340px;\r\n  width: 100px;\r\n  display: flex;\r\n}\r\n#KnowledgeIndex .myexam-menu-side-item {\r\n  border-radius:50%;\r\n  background: #fff;\r\n  color: #575B66;\r\n  width: 64px;\r\n  font-size: var(--td-size-9);\r\n  margin: 20px 40px;\r\n  height: 64px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  box-shadow: 0px 4px 20px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n#KnowledgeIndex  .myexam-date-side {\r\n  border-radius: 32px 0px 0px 0px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}