{"ast":null,"code":"import { ref, onMounted, watch } from 'vue';\nimport { Icon } from 'tdesign-icons-vue-next';\nimport { Network, DataSet } from 'vis-network/standalone';\nimport 'vis-network/dist/dist/vis-network.min.css';\n// const answerMap = [\"A\", \"B\", \"C\", \"D\", \"E\"];\n\nexport default {\n  __name: 'KnowledgeIndex',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const networkContainer = ref(null);\n    const atlasData = ref([]);\n    const activeAreas = ref('英语');\n    const contentData = ref({});\n    const fetchApiData = async () => {\n      try {\n        const response = await fetch('/api/reviewmaster/atlas/list');\n        const data = await response.json();\n        if (data.code === 200) {\n          atlasData.value = data.data;\n        }\n        console.log(data);\n      } catch (error) {\n        console.error('Error fetching API data:', error);\n      }\n    };\n    const loadNetwork = () => {\n      const container = networkContainer.value;\n      console.log(container);\n      const nodes = new DataSet([{\n        id: 1,\n        label: 'Node 1'\n      }, {\n        id: 2,\n        label: 'Node 2'\n      }, {\n        id: 3,\n        label: 'Node 3'\n      }]);\n      const edges = new DataSet([{\n        from: 1,\n        to: 2\n      }, {\n        from: 2,\n        to: 3\n      }, {\n        from: 3,\n        to: 1\n      }]);\n      const data = {\n        nodes: nodes,\n        edges: edges\n      };\n      const options = {};\n    };\n    watch(activeAreas, newValue => {\n      console.log('activeAreas changed:', newValue);\n      contentData.value = atlasData.value.find(item => item.areasName === newValue);\n    });\n    onMounted(() => {\n      fetchApiData();\n      loadNetwork();\n    });\n    const __returned__ = {\n      networkContainer,\n      atlasData,\n      activeAreas,\n      contentData,\n      fetchApiData,\n      loadNetwork,\n      ref,\n      onMounted,\n      watch,\n      get Icon() {\n        return Icon;\n      },\n      get Network() {\n        return Network;\n      },\n      get DataSet() {\n        return DataSet;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","Icon","Network","DataSet","networkContainer","atlasData","activeAreas","contentData","fetchApiData","response","fetch","data","json","code","value","console","log","error","loadNetwork","container","nodes","id","label","edges","from","to","options","newValue","find","item","areasName"],"sources":["E:/project/vue3/pxqd/src/layout/KnowledgeIndex.vue"],"sourcesContent":["<template>\n  <div id=\"KnowledgeIndex\">\n    <t-layout>\n      <t-header class=\"menu-header\">\n        <t-head-menu value=\"item1\" class=\"font-small\" style=\"cursor:pointer;\">\n          <router-link to=\"index\">\n            <icon class=\"icon\" name=\"chevron-left\" color=\"#2F3CF4\" style=\"margin-right: 24px;font-size: 40px;\" />\n          </router-link>\n          知识图谱\n        </t-head-menu>\n      </t-header>\n      <t-layout>\n        <t-aside width=\"15%\" class=\"myexam-left-side\" style=\"border-top: 1px solid var(--component-border)\">\n          <t-menu v-model=\"activeAreas\" class=\"myexam-subjects-items\" theme=\"light\" value=\"dashboard\" style=\"margin-right: 74px;width:100%;border-radius: 0px 32px 0px 0px;\">\n            <t-menu-item class=\"subjects-item\" :class=\"{ active:activeAreas === areas.areasName }\" :key=\"index\" v-for=\"areas,index in atlasData\" :value=\"areas.areasName\">\n              <icon class=\"icon\" name=\"folder-1\" color=\"#2F3CF4\" style=\"margin:0 10px;font-size: 20px;\" />\n              <span style=\"flex: 1;\">{{ areas.areasName }}</span>\n              <icon class=\"icon edit-icon\" :class=\"{ active:activeAreas === areas.areasName }\" name=\"edit-2\" color=\"#2F3CF4\" style=\"margin:0 10px;font-size: 20px;\" />\n            </t-menu-item>\n            <t-menu-item class=\"subjects-item\"  value=\"创建新题库\">\n              <icon class=\"icon\" name=\"add-circle\" color=\"#2F3CF4\" style=\"margin: 0 10px;font-size: 20px;\"/>\n              <span>创建新题库</span></t-menu-item>\n          </t-menu>\n        </t-aside>\n        <t-layout>\n          <t-content>\n            <div>\n              <div ref=\"networkContainer\" style=\"height: 400px;\"></div>\n            </div>\n          </t-content>\n          <t-footer></t-footer>\n        </t-layout>\n        <t-aside class=\"myexam-menu-side\" style=\"border-top: 1px solid var(--component-border)\">\n          <div title=\"出卷组题\" class=\"myexam-menu-side-item\"><icon title=\"出卷组题\" name=\"article\" ></icon></div>\n          <div title=\"二级——所有迁移\" class=\"myexam-menu-side-item\"><icon title=\"二级——所有迁移\" name=\"folder-import\" ></icon></div>\n          <div title=\"删除\" class=\"myexam-menu-side-item\"><icon title=\"删除\" name=\"delete\" ></icon></div>\n        </t-aside>\n        <t-aside class=\"myexam-date-side\" width=\"15%\" style=\"border-top: 1px solid var(--component-border)\">\n          \n        </t-aside>\n      </t-layout>\n    </t-layout>\n  </div>\n</template>\n<script setup>\nimport {  ref,onMounted,watch  } from 'vue'\nimport { Icon } from 'tdesign-icons-vue-next';\nimport { Network,DataSet } from 'vis-network/standalone';\nimport 'vis-network/dist/dist/vis-network.min.css';\n// const answerMap = [\"A\", \"B\", \"C\", \"D\", \"E\"];\nconst networkContainer = ref(null);\n\nconst atlasData = ref([]);\nconst activeAreas = ref('英语');\n\nconst contentData = ref({});\nconst fetchApiData = async () => {\n  try {\n    const response = await fetch('/api/reviewmaster/atlas/list');\n    const data = await response.json();\n    if(data.code === 200) {\n      atlasData.value = data.data;\n    }\n    console.log(data);\n  } catch (error) {\n    console.error('Error fetching API data:', error);\n  }\n};\n\nconst loadNetwork = () => {\n  const container = networkContainer.value;\n  console.log(container);\n  const nodes = new DataSet([\n    { id: 1, label: 'Node 1' },\n    { id: 2, label: 'Node 2' },\n    { id: 3, label: 'Node 3' }\n  ]);\n  const edges = new DataSet([\n    { from: 1, to: 2 },\n    { from: 2, to: 3 },\n    { from: 3, to: 1 }\n  ]);\n  const data = {\n    nodes: nodes,\n    edges: edges\n  };\n  const options = {};\n}\nwatch(activeAreas, (newValue) => {\n  console.log('activeAreas changed:', newValue);\n  contentData.value = atlasData.value.find(item => item.areasName === newValue);\n});\nonMounted(() => {\n  fetchApiData()\n  loadNetwork()\n})\n\n</script>\n\n<style>\n.t-icon {\n  cursor: pointer;\n}\n#KnowledgeIndex {\n\n}\n#KnowledgeIndex .menu-header{\n  height: 82px;\n  display: flex;\n  align-items: center;\n  margin-bottom: 32px;\n}\n#KnowledgeIndex .menu-header .t-menu {\n  font-size: var(--td-size-7);\n}\n#KnowledgeIndex .t-menu__item {\n  user-select: none;\n  color:#000;\n  height:53px;\n  font-size: var(--td-size-6);\n  margin: 12.5px 0;\n  border: solid 1px  #4566FC;\n  border-radius: 16px;\n  transition: .3s;\n}\n#KnowledgeIndex .t-menu__item .t-menu__content {\n  display: flex;\n  width:100%;\n  align-items: center;\n}\n#KnowledgeIndex .t-menu__item.t-is-active,\n#KnowledgeIndex .t-menu__item:hover{\n  transition: .3s;\n  color:#fff;\n  opacity: 1;\n  border-radius: 16px;\n  background: linear-gradient(110.93deg, rgba(58, 71, 252, 0.9) 0%, rgba(43, 141, 252, 1) 100%);\n}\n#KnowledgeIndex .t-menu__item.t-is-active .icon ,\n#KnowledgeIndex .t-menu__item:hover .icon{\n  color:#fff;\n}\n#KnowledgeIndex .t-menu__item.t-is-active .edit-icon {\n  display: inline-block;\n}\n#KnowledgeIndex  .edit-icon {\n  display: none;\n}\n#KnowledgeIndex .myexam-left-side{\n  left: 0px;\n  opacity: 1;\n  position: sticky;\n  border-radius: 0px 32px 0px 0px;\n  padding-top: 25px;\n  min-height: 100vh;\n  background: rgba(255, 255, 255, 1);\n}\n#KnowledgeIndex  .myexam-main-content {\n  background: #fff;\n  margin-left: 80px;\n  height: 100%;\n  padding: 20px 20px;\n  border-radius: 32px 32px 0px 0px;\n}\n#KnowledgeIndex  .myexam-list-item .t-list-item-main{\n  align-items:start;\n  display: flex;\n  flex-direction: column;\n}\n#KnowledgeIndex  .myexam-list-item .t-list-item__meta-title {\n  text-align: left;\n  line-height: var(--td-size-10);\n}\n#KnowledgeIndex  .myexam-list-item .t-list-item__action {\n  text-align: left;\n  display: flex;\n  flex-direction: column;\n  line-height: var(--td-size-12);\n  align-items: start;\n  color:#000;\n}\n#KnowledgeIndex  .myexam-list-item.row .t-list-item__action{\n  text-align: left;\n  display: flex;\n  flex-direction: row;\n  line-height: var(--td-size-12);\n  justify-content: space-between;\n  width: 100%;\n  color:#000;\n}\n#KnowledgeIndex  .myexam-list-item .myexam-list-item-answer {\n  margin: 2px 0;\n}\n#KnowledgeIndex  .myexam-list-item .myexam-list-item-answer label{\n  border: none;\n}\n#KnowledgeIndex  .myexam-list-item .myexam-list-item-answer:hover .chose-icon,\n#KnowledgeIndex  .myexam-list-item-answer .chosen .chose-icon{\n  background:#4566FC;\n  color:#fff;\n}\n#KnowledgeIndex  .myexam-list-item .t-textarea{\n  vertical-align: text-top;\n  display: inline-block;\n  width:380px;\n}\n#KnowledgeIndex  .myexam-list-item .chose-icon {\n  display: inline-block;\n  border-radius: 50%;\n  background-color: #EBEEF0;\n  color:#A6A6A6;\n  height: var(--td-size-10);\n  width: var(--td-size-10);\n  line-height: var(--td-size-10);\n  margin-right: var(--td-size-4);\n  text-align: center;\n}\n#KnowledgeIndex  .myexam-list-item .chose-type-3-button {\n  width: 48px;\n  height: 48px;\n  margin-top:5px;\n  font-size: var(--td-size-10);\n  background-color: #EBEEF0;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n#KnowledgeIndex .chosen .chose-type-3-button ,\n#KnowledgeIndex .chose-type-3-button:hover{\n  background:#4566FC;\n  color:#fff;\n}\n#KnowledgeIndex .myexam-menu-side {\n  background: none;\n  position: sticky;\n  top: 54vh;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 340px;\n  width: 100px;\n  display: flex;\n}\n#KnowledgeIndex .myexam-menu-side-item {\n  border-radius:50%;\n  background: #fff;\n  color: #575B66;\n  width: 64px;\n  font-size: var(--td-size-9);\n  margin: 20px 40px;\n  height: 64px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 0px 4px 20px rgba(0, 0, 0, 0.05);\n}\n\n#KnowledgeIndex  .myexam-date-side {\n  border-radius: 32px 0px 0px 0px;\n}\n</style>"],"mappings":"AA6CA,SAAUA,GAAG,EAACC,SAAS,EAACC,KAAK,QAAS,KAAK;AAC3C,SAASC,IAAI,QAAQ,wBAAwB;AAC7C,SAASC,OAAO,EAACC,OAAO,QAAQ,wBAAwB;AACxD,OAAO,2CAA2C;AAClD;;;;;;;;IACA,MAAMC,gBAAgB,GAAGN,GAAG,CAAC,IAAI,CAAC;IAElC,MAAMO,SAAS,GAAGP,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMQ,WAAW,GAAGR,GAAG,CAAC,IAAI,CAAC;IAE7B,MAAMS,WAAW,GAAGT,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3B,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;QAC5D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,IAAGD,IAAI,CAACE,IAAI,KAAK,GAAG,EAAE;UACpBR,SAAS,CAACS,KAAK,GAAGH,IAAI,CAACA,IAAI;QAC7B;QACAI,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;MACxB,MAAMC,SAAS,GAAGf,gBAAgB,CAACU,KAAK;MACxCC,OAAO,CAACC,GAAG,CAACG,SAAS,CAAC;MACtB,MAAMC,KAAK,GAAG,IAAIjB,OAAO,CAAC,CACxB;QAAEkB,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAS,CAAC,EAC1B;QAAED,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAS,CAAC,EAC1B;QAAED,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAS,CAAC,CAC3B,CAAC;MACF,MAAMC,KAAK,GAAG,IAAIpB,OAAO,CAAC,CACxB;QAAEqB,IAAI,EAAE,CAAC;QAAEC,EAAE,EAAE;MAAE,CAAC,EAClB;QAAED,IAAI,EAAE,CAAC;QAAEC,EAAE,EAAE;MAAE,CAAC,EAClB;QAAED,IAAI,EAAE,CAAC;QAAEC,EAAE,EAAE;MAAE,CAAC,CACnB,CAAC;MACF,MAAMd,IAAI,GAAG;QACXS,KAAK,EAAEA,KAAK;QACZG,KAAK,EAAEA;MACT,CAAC;MACD,MAAMG,OAAO,GAAG,CAAC,CAAC;IACpB,CAAC;IACD1B,KAAK,CAACM,WAAW,EAAGqB,QAAQ,IAAK;MAC/BZ,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEW,QAAQ,CAAC;MAC7CpB,WAAW,CAACO,KAAK,GAAGT,SAAS,CAACS,KAAK,CAACc,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,SAAS,KAAKH,QAAQ,CAAC;IAC/E,CAAC,CAAC;IACF5B,SAAS,CAAC,MAAM;MACdS,YAAY,CAAC,CAAC;MACdU,WAAW,CAAC,CAAC;IACf,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}