{"ast":null,"code":"/**\n * tdesign v1.9.0\n * (c) 2024 tdesign\n * @license MIT\n */\n\nvar props = {\n  allowInput: Boolean,\n  clearable: Boolean,\n  disableTime: {\n    type: Function\n  },\n  disabled: {\n    type: [Boolean, Array]\n  },\n  format: {\n    type: String,\n    \"default\": \"HH:mm:ss\"\n  },\n  hideDisabledTime: {\n    type: Boolean,\n    \"default\": true\n  },\n  placeholder: {\n    type: [String, Array],\n    \"default\": void 0\n  },\n  popupProps: {\n    type: Object\n  },\n  presets: {\n    type: Object\n  },\n  rangeInputProps: {\n    type: Object\n  },\n  size: {\n    type: String,\n    \"default\": \"medium\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"small\", \"medium\", \"large\"].includes(val);\n    }\n  },\n  status: {\n    type: String,\n    \"default\": \"default\",\n    validator: function validator(val) {\n      if (!val) return true;\n      return [\"default\", \"success\", \"warning\", \"error\"].includes(val);\n    }\n  },\n  steps: {\n    type: Array,\n    \"default\": function _default() {\n      return [1, 1, 1];\n    }\n  },\n  tips: {\n    type: [String, Function]\n  },\n  value: {\n    type: Array,\n    \"default\": void 0\n  },\n  modelValue: {\n    type: Array,\n    \"default\": void 0\n  },\n  defaultValue: {\n    type: Array\n  },\n  onBlur: Function,\n  onChange: Function,\n  onFocus: Function,\n  onInput: Function,\n  onPick: Function\n};\nexport { props as default };","map":{"version":3,"names":["props","allowInput","Boolean","clearable","disableTime","type","Function","disabled","Array","format","String","hideDisabledTime","placeholder","popupProps","Object","presets","rangeInputProps","size","validator","val","includes","status","steps","_default","tips","value","modelValue","defaultValue","onBlur","onChange","onFocus","onInput","onPick"],"sources":["../../src/time-picker/time-range-picker-props.ts"],"sourcesContent":["/* eslint-disable */\n\n/**\n * 该文件为脚本自动生成文件，请勿随意修改。如需修改请联系 PMC\n * */\n\nimport { TdTimeRangePickerProps } from '../time-picker/type';\nimport { PropType } from 'vue';\n\nexport default {\n  /** 是否允许直接输入时间 */\n  allowInput: Boolean,\n  /** 是否允许清除选中值 */\n  clearable: Boolean,\n  /** 禁用时间项 */\n  disableTime: {\n    type: Function as PropType<TdTimeRangePickerProps['disableTime']>,\n  },\n  /** 是否禁用组件，值为数组表示可分别控制开始日期和结束日期是否禁用 */\n  disabled: {\n    type: [Boolean, Array] as PropType<TdTimeRangePickerProps['disabled']>,\n  },\n  /** 用于格式化时间，[详细文档](https://day.js.org/docs/en/display/format) */\n  format: {\n    type: String,\n    default: 'HH:mm:ss',\n  },\n  /** 是否隐藏禁用状态的时间项 */\n  hideDisabledTime: {\n    type: Boolean,\n    default: true,\n  },\n  /** 占位符，值为数组表示可分别为开始日期和结束日期设置占位符 */\n  placeholder: {\n    type: [String, Array] as PropType<TdTimeRangePickerProps['placeholder']>,\n    default: undefined as TdTimeRangePickerProps['placeholder'],\n  },\n  /** 透传给 popup 组件的参数 */\n  popupProps: {\n    type: Object as PropType<TdTimeRangePickerProps['popupProps']>,\n  },\n  /** 预设快捷时间范围选择，示例：{ '下午': ['13:00:00', '18:00:00'] } */\n  presets: {\n    type: Object as PropType<TdTimeRangePickerProps['presets']>,\n  },\n  /** 透传给范围输入框 RangeInput 组件的参数 */\n  rangeInputProps: {\n    type: Object as PropType<TdTimeRangePickerProps['rangeInputProps']>,\n  },\n  /** 尺寸 */\n  size: {\n    type: String as PropType<TdTimeRangePickerProps['size']>,\n    default: 'medium' as TdTimeRangePickerProps['size'],\n    validator(val: TdTimeRangePickerProps['size']): boolean {\n      if (!val) return true;\n      return ['small', 'medium', 'large'].includes(val);\n    },\n  },\n  /** 输入框状态 */\n  status: {\n    type: String as PropType<TdTimeRangePickerProps['status']>,\n    default: 'default' as TdTimeRangePickerProps['status'],\n    validator(val: TdTimeRangePickerProps['status']): boolean {\n      if (!val) return true;\n      return ['default', 'success', 'warning', 'error'].includes(val);\n    },\n  },\n  /** 时间间隔步数，数组排列 [小时, 分钟, 秒]，示例：[2, 1, 1] 或者 ['2', '1', '1'] */\n  steps: {\n    type: Array as PropType<TdTimeRangePickerProps['steps']>,\n    default: (): TdTimeRangePickerProps['steps'] => [1, 1, 1],\n  },\n  /** 输入框下方提示文本，会根据不同的 `status` 呈现不同的样式 */\n  tips: {\n    type: [String, Function] as PropType<TdTimeRangePickerProps['tips']>,\n  },\n  /** 选中值 */\n  value: {\n    type: Array as PropType<TdTimeRangePickerProps['value']>,\n    default: undefined as TdTimeRangePickerProps['value'],\n  },\n  modelValue: {\n    type: Array as PropType<TdTimeRangePickerProps['value']>,\n    default: undefined as TdTimeRangePickerProps['value'],\n  },\n  /** 选中值，非受控属性 */\n  defaultValue: {\n    type: Array as PropType<TdTimeRangePickerProps['defaultValue']>,\n  },\n  /** 当输入框失去焦点时触发 */\n  onBlur: Function as PropType<TdTimeRangePickerProps['onBlur']>,\n  /** 选中值发生变化时触发 */\n  onChange: Function as PropType<TdTimeRangePickerProps['onChange']>,\n  /** 范围输入框获得焦点时触发 */\n  onFocus: Function as PropType<TdTimeRangePickerProps['onFocus']>,\n  /** 当输入框内容发生变化时触发，参数 input 表示输入内容，value 表示组件当前有效值 */\n  onInput: Function as PropType<TdTimeRangePickerProps['onInput']>,\n  /** 面板选中值后触发 */\n  onPick: Function as PropType<TdTimeRangePickerProps['onPick']>,\n};\n"],"mappings":";;;;;;AASA,IAAAA,KAAA,GAAe;EAEbC,UAAY,EAAAC,OAAA;EAEZC,SAAW,EAAAD,OAAA;EAEXE,WAAa;IACXC,IAAM,EAAAC;GACR;EAEAC,QAAU;IACRF,IAAA,EAAM,CAACH,OAAA,EAASM,KAAK;GACvB;EAEAC,MAAQ;IACNJ,IAAM,EAAAK,MAAA;IACN,SAAS;GACX;EAEAC,gBAAkB;IAChBN,IAAM,EAAAH,OAAA;IACN,SAAS;GACX;EAEAU,WAAa;IACXP,IAAA,EAAM,CAACK,MAAA,EAAQF,KAAK;IACpB,WAAS;GACX;EAEAK,UAAY;IACVR,IAAM,EAAAS;GACR;EAEAC,OAAS;IACPV,IAAM,EAAAS;GACR;EAEAE,eAAiB;IACfX,IAAM,EAAAS;GACR;EAEAG,IAAM;IACJZ,IAAM,EAAAK,MAAA;IACN,WAAS;IACTQ,SAAA,WAAAA,SAAUA,CAAAC,GAA8C;MACtD,IAAI,CAACA,GAAA,EAAY;MACjB,OAAO,CAAC,OAAS,YAAU,OAAO,EAAEC,QAAA,CAASD,GAAG;IAClD;GACF;EAEAE,MAAQ;IACNhB,IAAM,EAAAK,MAAA;IACN,WAAS;IACTQ,SAAA,WAAAA,SAAUA,CAAAC,GAAgD;MACxD,IAAI,CAACA,GAAA,EAAY;MACjB,OAAO,CAAC,SAAW,aAAW,WAAW,OAAO,EAAEC,QAAA,CAASD,GAAG;IAChE;GACF;EAEAG,KAAO;IACLjB,IAAM,EAAAG,KAAA;IACN,WAAS,SAAAe,SAAA;MAAA,OAAuC,CAAC,GAAG,GAAG,CAAC;IAAA;GAC1D;EAEAC,IAAM;IACJnB,IAAA,EAAM,CAACK,MAAA,EAAQJ,QAAQ;GACzB;EAEAmB,KAAO;IACLpB,IAAM,EAAAG,KAAA;IACN,WAAS;GACX;EACAkB,UAAY;IACVrB,IAAM,EAAAG,KAAA;IACN,WAAS;GACX;EAEAmB,YAAc;IACZtB,IAAM,EAAAG;GACR;EAEAoB,MAAQ,EAAAtB,QAAA;EAERuB,QAAU,EAAAvB,QAAA;EAEVwB,OAAS,EAAAxB,QAAA;EAETyB,OAAS,EAAAzB,QAAA;EAET0B,MAAQ,EAAA1B;AACV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}