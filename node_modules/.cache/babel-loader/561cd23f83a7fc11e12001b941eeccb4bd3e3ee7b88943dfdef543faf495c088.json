{"ast":null,"code":"import { createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"MyIndex\"\n};\nconst _hoisted_2 = {\n  class: \"knowledgeGraph-main-content\"\n};\nconst _hoisted_3 = {\n  ref: \"networkContainer\",\n  style: {\n    \"height\": \"800px\",\n    \"width\": \"800px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_t_head_menu = _resolveComponent(\"t-head-menu\");\n  const _component_t_header = _resolveComponent(\"t-header\");\n  const _component_t_content = _resolveComponent(\"t-content\");\n  const _component_t_footer = _resolveComponent(\"t-footer\");\n  const _component_t_layout = _resolveComponent(\"t-layout\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_t_layout, null, {\n    default: _withCtx(() => [_createVNode(_component_t_header, {\n      class: \"menu-header\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_t_head_menu, {\n        value: \"item1\",\n        class: \"font-small\",\n        style: {\n          \"cursor\": \"pointer\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_router_link, {\n          to: \"index\"\n        }, {\n          default: _withCtx(() => [_createVNode($setup[\"Icon\"], {\n            class: \"icon\",\n            name: \"chevron-left\",\n            color: \"#2F3CF4\",\n            style: {\n              \"margin-right\": \"24px\",\n              \"font-size\": \"40px\"\n            }\n          })]),\n          _: 1 /* STABLE */\n        }), _createTextVNode(\" 个人中心 \")]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_t_layout, null, {\n      default: _withCtx(() => [_createVNode(_component_t_layout, null, {\n        default: _withCtx(() => [_createVNode(_component_t_content, null, {\n          default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, null, 512 /* NEED_PATCH */)])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_t_footer)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["id","class","ref","style","_createElementBlock","_hoisted_1","_createVNode","_component_t_layout","default","_withCtx","_component_t_header","_component_t_head_menu","value","_component_router_link","to","$setup","name","color","_","_createTextVNode","_component_t_content","_createElementVNode","_hoisted_2","_hoisted_3","_component_t_footer"],"sources":["E:\\project\\vue3\\pxqd\\src\\layout\\MyIndex.vue"],"sourcesContent":["<template>\r\n  <div id=\"MyIndex\">\r\n    <t-layout>\r\n      <t-header class=\"menu-header\">\r\n        <t-head-menu value=\"item1\" class=\"font-small\" style=\"cursor:pointer;\">\r\n          <router-link to=\"index\">\r\n            <icon class=\"icon\" name=\"chevron-left\" color=\"#2F3CF4\" style=\"margin-right: 24px;font-size: 40px;\" />\r\n          </router-link>\r\n          个人中心\r\n        </t-head-menu>\r\n      </t-header>\r\n      <t-layout>\r\n        <t-layout>\r\n          <t-content>\r\n            <div class=\"knowledgeGraph-main-content\">\r\n              <div ref=\"networkContainer\" style=\"height: 800px;width:800px\"></div>\r\n            </div>\r\n          </t-content>\r\n          <t-footer></t-footer>\r\n        </t-layout>\r\n      </t-layout>\r\n    </t-layout>\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport {  ref,onMounted,watch  } from 'vue'\r\nimport { Icon } from 'tdesign-icons-vue-next';\r\nimport * as d3 from 'd3';\r\nconst networkContainer = ref(null);\r\n\r\nconst atlasData = ref([\r\n  {\r\n    \"areasId\": 1,\r\n    \"areasName\": \"小学\",\r\n    \"subjectVoList\": [\r\n      {\r\n        \"subjectId\": 2,\r\n        \"subjectName\": \"数学\",\r\n        \"sortNum\": 1,\r\n        \"remark\": \"数学科目\",\r\n        \"examKnowledgeVoList\": [\r\n          {\r\n            \"knowledgeId\": 1,\r\n            \"knowledge\": \"线性代数\",\r\n            \"parentName\": null,\r\n            \"parentId\": 0,\r\n            \"children\": [\r\n              {\r\n                \"knowledgeId\": 2,\r\n                \"knowledge\": \"线性代数2\",\r\n                \"parentName\": null,\r\n                \"parentId\": 1,\r\n                \"children\": []\r\n              },\r\n              {\r\n                \"knowledgeId\": 6,\r\n                \"knowledge\": \"矩阵\",\r\n                \"parentName\": null,\r\n                \"parentId\": 1,\r\n                \"children\": []\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            \"knowledgeId\": 11,\r\n            \"knowledge\": \"教育法律框架\",\r\n            \"parentName\": null,\r\n            \"parentId\": 0,\r\n            \"children\": []\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"subjectId\": 3,\r\n        \"subjectName\": \"音乐\",\r\n        \"sortNum\": 2,\r\n        \"remark\": null,\r\n        \"examKnowledgeVoList\": [\r\n          {\r\n            \"knowledgeId\": 7,\r\n            \"knowledge\": \"乐器\",\r\n            \"parentName\": null,\r\n            \"parentId\": 0,\r\n            \"children\": [\r\n              {\r\n                \"knowledgeId\": 8,\r\n                \"knowledge\": \"小提琴\",\r\n                \"parentName\": null,\r\n                \"parentId\": 7,\r\n                \"children\": []\r\n              },\r\n              {\r\n                \"knowledgeId\": 9,\r\n                \"knowledge\": \"大提琴\",\r\n                \"parentName\": null,\r\n                \"parentId\": 7,\r\n                \"children\": []\r\n              },\r\n              {\r\n                \"knowledgeId\": 10,\r\n                \"knowledge\": \"二胡\",\r\n                \"parentName\": null,\r\n                \"parentId\": 7,\r\n                \"children\": []\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        \"subjectId\": 4,\r\n        \"subjectName\": \"中学\",\r\n        \"sortNum\": 3,\r\n        \"remark\": null,\r\n        \"examKnowledgeVoList\": [\r\n          {\r\n            \"knowledgeId\": 3,\r\n            \"knowledge\": \"综合素质\",\r\n            \"parentName\": null,\r\n            \"parentId\": 0,\r\n            \"children\": [\r\n              {\r\n                \"knowledgeId\": 4,\r\n                \"knowledge\": \"体育\",\r\n                \"parentName\": null,\r\n                \"parentId\": 3,\r\n                \"children\": [\r\n                  {\r\n                    \"knowledgeId\": 5,\r\n                    \"knowledge\": \"跑步\",\r\n                    \"parentName\": null,\r\n                    \"parentId\": 4,\r\n                    \"children\": []\r\n                  }\r\n                ]\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]);\r\nconst activeAreas = ref('小学');\r\n\r\nconst contentData = ref({});\r\nconst transformData = () => {\r\n  \r\n}\r\nconst buildGraphData = () =>  {\r\n  const data = {\r\n    nodes: [\r\n      { id: 1, label: 'Node 1' },\r\n      { id: 2, label: 'Node 2' },\r\n      { id: 3, label: 'Node 3' },\r\n    ],\r\n    links: [\r\n      { source: 1, target: 2 },\r\n      { source: 1, target: 3 },\r\n    ],\r\n  };\r\n  const container = networkContainer.value;\r\n  const width = container.offsetWidth;\r\n  const height = container.offsetHeight;\r\n  const svg = d3.select(container)\r\n    .append('svg')\r\n    .attr('width', width)\r\n    .attr('height', height);\r\n  const simulation =  d3.forceSimulation(data.nodes)\r\n    .force('link', d3.forceLink(data.links)\r\n      .id(d => d.id)\r\n      .distance(100) // 调整连接线的距离\r\n    )\r\n    .force('charge', d3.forceManyBody().strength(-100))\r\n    .force('center', d3.forceCenter(width / 2, height / 2))\r\n    .force('collide', d3.forceCollide().radius(10).strength(100)); // 添加节点碰撞力\r\n\r\n\r\n  data.nodes.forEach((node, index) => {\r\n    node.x = simulation.nodes()[index].x;\r\n    node.y = simulation.nodes()[index].y;\r\n  });\r\n\r\n  const link = svg.selectAll('line')\r\n  .data(data.links)\r\n  .join('path')\r\n  .attr('stroke', 'gray')\r\n  .attr('fill', 'none')\r\n    \r\n  const node = svg.selectAll('g')\r\n    .data(data.nodes)\r\n    .join('g')\r\n    .call(drag(simulation))\r\n\r\n  const circle = node.append('circle')\r\n    .attr('r', 5);\r\n\r\n  const text = node.append('text')\r\n    .text((d) => d.label)\r\n    .style('font-size', '16px')\r\n    .style('fill', 'white')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('dy', '0.35em');\r\n\r\n  node.each(function () {\r\n    const nodeWidth = this.getBBox().width + 3;\r\n    circle.attr('r', nodeWidth / 2);\r\n    text.attr('x', 0).attr('y', 0).attr('transform', `scale(${nodeWidth / 100},${nodeWidth / 100})`);\r\n  });\r\n  let nodeWeights = Array(data.nodes.length).fill(0);\r\n  data.links.forEach(link => {\r\n    let source = link.source.id;\r\n    if (!nodeWeights[source]) {\r\n      nodeWeights[source] = 0;\r\n    }\r\n    nodeWeights[source] += 1;\r\n  });\r\n  let maxValue = Math.max(...nodeWeights);\r\n  let minValue = Math.min(...nodeWeights);\r\n  nodeWeights = nodeWeights.map((weight) => (weight - minValue) / (maxValue - minValue));\r\n  simulation.on('tick', () => {\r\n    link.attr('d', (d) => {\r\n      const path = d3.path();\r\n      path.moveTo(d.source.x, d.source.y);\r\n      path.quadraticCurveTo(\r\n        (d.source.x + d.target.x) / 2, // 控制点的x坐标\r\n        d.source.y, // 控制点的y坐标\r\n        d.target.x, d.target.y\r\n      );\r\n      return path.toString();\r\n    });\r\n    node.attr('transform', (d) => `translate(${d.x},${d.y})`);\r\n    node.attr('fill', d => {\r\n      const nodeWeight = nodeWeights[d.id] || 0;\r\n        if (nodeWeight >= 0.8) {\r\n          return 'orange'; \r\n        } else if (nodeWeight >=  0.5) {\r\n          return 'yellow'; \r\n        } else {\r\n          return 'gray'; \r\n        }\r\n    });\r\n  });\r\n\r\n  function drag(simulation) {\r\n    function dragstarted(event, d) {\r\n      if (!event.active) simulation.alphaTarget(0.3).restart();\r\n      d.fx = d.x;\r\n      d.fy = d.y;\r\n    }\r\n\r\n    function dragged(event, d) {\r\n      d.fx = event.x;\r\n      d.fy = event.y;\r\n    }\r\n\r\n    function dragended(event, d) {\r\n      if (!event.active) simulation.alphaTarget(0);\r\n      d.fx = null;\r\n      d.fy = null;\r\n    }\r\n\r\n    return d3.drag()\r\n      .on('start', dragstarted)\r\n      .on('drag', dragged)\r\n      .on('end', dragended);\r\n  }\r\n}\r\nconst loadNetwork = () => {\r\n  \r\n}\r\nconst fetchApiData = async () => {\r\n  try {\r\n    const response = await fetch('/api/reviewmaster/atlas/list');\r\n    const data = await response.json();\r\n    if(data.code === 200) {\r\n      atlasData.value = data.data;\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching API data:', error);\r\n  }\r\n};\r\nwatch(activeAreas, (newValue) => {\r\n  contentData.value = atlasData.value.find(item => item.areasName === newValue);\r\n  transformData()\r\n});\r\nonMounted(() => {\r\n  fetchApiData()\r\n  loadNetwork()\r\n  buildGraphData()\r\n})\r\n\r\n</script>\r\n\r\n<style>\r\n.t-icon {\r\n  cursor: pointer;\r\n}\r\n#MyIndex {\r\n  height: 100vh;\r\n  overflow-y: scroll;\r\n}\r\n#MyIndex .menu-header{\r\n  height: 82px;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 32px;\r\n}\r\n#MyIndex .menu-header .t-menu {\r\n  font-size: var(--td-size-7);\r\n}\r\n#MyIndex .t-menu__item {\r\n  user-select: none;\r\n  color:#000;\r\n  height:53px;\r\n  font-size: var(--td-size-6);\r\n  margin: 12.5px 0;\r\n  border: solid 1px  #4566FC;\r\n  border-radius: 16px;\r\n  transition: .3s;\r\n}\r\n#MyIndex .t-menu__item .t-menu__content {\r\n  display: flex;\r\n  width:100%;\r\n  align-items: center;\r\n}\r\n#MyIndex .t-menu__item.t-is-active,\r\n#MyIndex .t-menu__item:hover{\r\n  transition: .3s;\r\n  color:#fff;\r\n  opacity: 1;\r\n  border-radius: 16px;\r\n  background: linear-gradient(110.93deg, rgba(58, 71, 252, 0.9) 0%, rgba(43, 141, 252, 1) 100%);\r\n}\r\n#MyIndex .t-menu__item.t-is-active .icon ,\r\n#MyIndex .t-menu__item:hover .icon{\r\n  color:#fff;\r\n}\r\n#MyIndex .t-menu__item.t-is-active .edit-icon {\r\n  display: inline-block;\r\n}\r\n#MyIndex  .edit-icon {\r\n  display: none;\r\n}\r\n#MyIndex .myexam-left-side{\r\n  left: 0px;\r\n  opacity: 1;\r\n  position: sticky;\r\n  border-radius: 0px 32px 0px 0px;\r\n  padding-top: 25px;\r\n  min-height: 100vh;\r\n  background: rgba(255, 255, 255, 1);\r\n}\r\n\r\n#MyIndex .myexam-menu-side {\r\n  background: none;\r\n  position: sticky;\r\n  top: 54vh;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 340px;\r\n  width: 100px;\r\n  display: flex;\r\n}\r\n#MyIndex .myexam-menu-side-item {\r\n  border-radius:50%;\r\n  background: #fff;\r\n  color: #575B66;\r\n  width: 64px;\r\n  font-size: var(--td-size-9);\r\n  margin: 20px 40px;\r\n  height: 64px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  box-shadow: 0px 4px 20px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n#MyIndex  .myexam-date-side {\r\n  border-radius: 32px 0px 0px 0px;\r\n}\r\n</style>"],"mappings":";;EACOA,EAAE,EAAC;AAAS;;EAaFC,KAAK,EAAC;AAA6B;;EACjCC,GAAG,EAAC,kBAAkB;EAACC,KAAiC,EAAjC;IAAA;IAAA;EAAA;;;;;;;;;uBAdxCC,mBAAA,CAqBM,OArBNC,UAqBM,GApBJC,YAAA,CAmBWC,mBAAA;IArBfC,OAAA,EAAAC,QAAA,CAGM,MAOW,CAPXH,YAAA,CAOWI,mBAAA;MAPDT,KAAK,EAAC;IAAa;MAHnCO,OAAA,EAAAC,QAAA,CAIQ,MAKc,CALdH,YAAA,CAKcK,sBAAA;QALDC,KAAK,EAAC,OAAO;QAACX,KAAK,EAAC,YAAY;QAACE,KAAuB,EAAvB;UAAA;QAAA;;QAJtDK,OAAA,EAAAC,QAAA,CAKU,MAEc,CAFdH,YAAA,CAEcO,sBAAA;UAFDC,EAAE,EAAC;QAAO;UALjCN,OAAA,EAAAC,QAAA,CAMY,MAAqG,CAArGH,YAAA,CAAqGS,MAAA;YAA/Fd,KAAK,EAAC,MAAM;YAACe,IAAI,EAAC,cAAc;YAACC,KAAK,EAAC,SAAS;YAACd,KAA2C,EAA3C;cAAA;cAAA;YAAA;;UANnEe,CAAA;YAAAC,gBAAA,CAOwB,QAEhB,E;QATRD,CAAA;;MAAAA,CAAA;QAWMZ,YAAA,CASWC,mBAAA;MApBjBC,OAAA,EAAAC,QAAA,CAYQ,MAOW,CAPXH,YAAA,CAOWC,mBAAA;QAnBnBC,OAAA,EAAAC,QAAA,CAaU,MAIY,CAJZH,YAAA,CAIYc,oBAAA;UAjBtBZ,OAAA,EAAAC,QAAA,CAcY,MAEM,CAFNY,mBAAA,CAEM,OAFNC,UAEM,GADJD,mBAAA,CAAoE,OAApEE,UAAoE,8B;UAflFL,CAAA;YAkBUZ,YAAA,CAAqBkB,mBAAA,E;QAlB/BN,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}