{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * tdesign v1.9.0\n * (c) 2024 tdesign\n * @license MIT\n */\n\nimport { _ as _slicedToArray } from '../../_chunks/dep-b089fa1f.mjs';\nimport { _ as _defineProperty } from '../../_chunks/dep-7deaa3b9.mjs';\nimport { toRefs, ref, reactive, computed, watch, onMounted, onBeforeUnmount } from 'vue';\nimport { g as get_1 } from '../../_chunks/dep-cedc2818.mjs';\nimport { d as debounce_1 } from '../../_chunks/dep-665d45b4.mjs';\nimport '../../_chunks/dep-cb814df4.mjs';\nimport { _ as _arrayFilter } from '../../_chunks/dep-fd2b6c64.mjs';\nimport { _ as _baseRest, i as isArrayLikeObject_1 } from '../../_chunks/dep-a4a3ac25.mjs';\nimport { _ as _baseDifference } from '../../_chunks/dep-bb900186.mjs';\nimport { a as _baseFlatten } from '../../_chunks/dep-4481f632.mjs';\nimport { _ as _SetCache, a as _cacheHas } from '../../_chunks/dep-1aab510a.mjs';\nimport { _ as _arrayIncludes, a as _arrayIncludesWith } from '../../_chunks/dep-931fe368.mjs';\nimport { _ as _Set } from '../../_chunks/dep-3f15cb30.mjs';\nimport { _ as _setToArray } from '../../_chunks/dep-230c1b47.mjs';\nimport { l as last_1 } from '../../_chunks/dep-d7c36095.mjs';\nimport '../../_common/js/log/index.mjs';\nimport { getScrollbarWidthWithCSS } from '../../_common/js/utils/getScrollbarWidth.mjs';\nimport { off, on } from '../../utils/dom.mjs';\nimport { getIEVersion } from '../../_common/js/utils/helper.mjs';\nimport { p as pick_1 } from '../../_chunks/dep-76351c51.mjs';\nimport log from '../../_common/js/log/log.mjs';\nimport '../../_chunks/dep-8e411f1c.mjs';\nimport '../../_chunks/dep-8dbc9855.mjs';\nimport '../../_chunks/dep-8dae3bca.mjs';\nimport '../../_chunks/dep-ab439391.mjs';\nimport '../../_chunks/dep-60d62610.mjs';\nimport '../../_chunks/dep-10024af3.mjs';\nimport '../../_chunks/dep-cd533155.mjs';\nimport '../../_chunks/dep-2adf18a2.mjs';\nimport '../../_chunks/dep-c4f80cb4.mjs';\nimport '../../_chunks/dep-996b4900.mjs';\nimport '../../_chunks/dep-66473aa9.mjs';\nimport '../../_chunks/dep-715774e0.mjs';\nimport '../../_chunks/dep-5a5a1764.mjs';\nimport '../../_chunks/dep-3108c312.mjs';\nimport '../../_chunks/dep-93498383.mjs';\nimport '../../_chunks/dep-67e59a11.mjs';\nimport '../../_chunks/dep-27be073b.mjs';\nimport '../../_chunks/dep-013382c3.mjs';\nimport '../../_chunks/dep-6861d388.mjs';\nimport '../../_chunks/dep-396d852b.mjs';\nimport '../../_chunks/dep-a2db6df1.mjs';\nimport '../../_chunks/dep-ca764006.mjs';\nimport '../../_chunks/dep-0f89a1dd.mjs';\nimport '../../_chunks/dep-30b3f256.mjs';\nimport '../../utils/easing.mjs';\nimport '../../_chunks/dep-b15588b0.mjs';\nimport '../../_chunks/dep-807e1747.mjs';\nimport '../../_chunks/dep-413fbf03.mjs';\nimport '../../_chunks/dep-ac561548.mjs';\nimport '../../_chunks/dep-0e4de31a.mjs';\nimport '../../_chunks/dep-deb34e0f.mjs';\nimport '../../_chunks/dep-36582a92.mjs';\nimport '../../_chunks/dep-2ee9d497.mjs';\nimport '../../_chunks/dep-41db3bc9.mjs';\n\n/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop$1() {\n  // No operation performed.\n}\nvar noop_1 = noop$1;\nvar Set = _Set,\n  noop = noop_1,\n  setToArray$1 = _setToArray;\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet$1 = !(Set && 1 / setToArray$1(new Set([, -0]))[1] == INFINITY) ? noop : function (values) {\n  return new Set(values);\n};\nvar _createSet = createSet$1;\nvar SetCache = _SetCache,\n  arrayIncludes = _arrayIncludes,\n  arrayIncludesWith = _arrayIncludesWith,\n  cacheHas = _cacheHas,\n  createSet = _createSet,\n  setToArray = _setToArray;\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq$1(array, iteratee, comparator) {\n  var index = -1,\n    includes = arrayIncludes,\n    length = array.length,\n    isCommon = true,\n    result = [],\n    seen = result;\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  } else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache();\n  } else {\n    seen = iteratee ? [] : result;\n  }\n  outer: while (++index < length) {\n    var value = array[index],\n      computed = iteratee ? iteratee(value) : value;\n    value = comparator || value !== 0 ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    } else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\nvar _baseUniq = baseUniq$1;\nvar baseDifference = _baseDifference,\n  baseFlatten = _baseFlatten,\n  baseUniq = _baseUniq;\n\n/**\n * The base implementation of methods like `_.xor`, without support for\n * iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of values.\n */\nfunction baseXor$1(arrays, iteratee, comparator) {\n  var length = arrays.length;\n  if (length < 2) {\n    return length ? baseUniq(arrays[0]) : [];\n  }\n  var index = -1,\n    result = Array(length);\n  while (++index < length) {\n    var array = arrays[index],\n      othIndex = -1;\n    while (++othIndex < length) {\n      if (othIndex != index) {\n        result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n      }\n    }\n  }\n  return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n}\nvar _baseXor = baseXor$1;\nvar arrayFilter = _arrayFilter,\n  baseRest = _baseRest,\n  baseXor = _baseXor,\n  isArrayLikeObject = isArrayLikeObject_1,\n  last = last_1;\n\n/**\n * This method is like `_.xor` except that it accepts `comparator` which is\n * invoked to compare elements of `arrays`. The order of result values is\n * determined by the order they occur in the arrays. The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.xorWith(objects, others, _.isEqual);\n * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n */\nvar xorWith = baseRest(function (arrays) {\n  var comparator = last(arrays);\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n});\nvar xorWith_1 = xorWith;\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction getColumnFixedStyles(col, index, rowAndColFixedPosition, tableColFixedClasses) {\n  var fixedPos = rowAndColFixedPosition === null || rowAndColFixedPosition === void 0 ? void 0 : rowAndColFixedPosition.get(col.colKey || index);\n  if (!fixedPos) return {};\n  var thClasses = _defineProperty(_defineProperty(_defineProperty(_defineProperty({}, tableColFixedClasses.left, col.fixed === \"left\"), tableColFixedClasses.right, col.fixed === \"right\"), tableColFixedClasses.lastLeft, col.fixed === \"left\" && fixedPos.lastLeftFixedCol), tableColFixedClasses.firstRight, col.fixed === \"right\" && fixedPos.firstRightFixedCol);\n  var thStyles = {\n    left: col.fixed === \"left\" ? \"\".concat(fixedPos.left, \"px\") : void 0,\n    right: col.fixed === \"right\" ? \"\".concat(fixedPos.right, \"px\") : void 0\n  };\n  return {\n    style: thStyles,\n    classes: thClasses\n  };\n}\nfunction getRowFixedStyles(rowId, rowIndex, rowLength, fixedRows, rowAndColFixedPosition, tableRowFixedClasses) {\n  if (!fixedRows || !fixedRows.length) return {\n    style: void 0,\n    classes: void 0\n  };\n  var fixedTop = rowIndex < fixedRows[0];\n  var fixedBottom = rowIndex > rowLength - 1 - fixedRows[1];\n  var firstFixedBottomRow = rowLength - fixedRows[1];\n  var fixedPos = (rowAndColFixedPosition === null || rowAndColFixedPosition === void 0 ? void 0 : rowAndColFixedPosition.get(rowId)) || {};\n  var rowClasses = _defineProperty(_defineProperty(_defineProperty(_defineProperty({}, tableRowFixedClasses.top, fixedTop), tableRowFixedClasses.bottom, fixedBottom), tableRowFixedClasses.firstBottom, rowIndex === firstFixedBottomRow), tableRowFixedClasses.withoutBorderBottom, rowIndex === firstFixedBottomRow - 1);\n  var rowStyles = {\n    top: fixedTop ? \"\".concat(fixedPos.top, \"px\") : void 0,\n    bottom: fixedBottom ? \"\".concat(fixedPos.bottom, \"px\") : void 0\n  };\n  return {\n    style: rowStyles,\n    classes: rowClasses\n  };\n}\nfunction useFixed(props, context, finalColumns, affixRef) {\n  var _toRefs = toRefs(props),\n    columns = _toRefs.columns,\n    tableLayout = _toRefs.tableLayout,\n    tableContentWidth = _toRefs.tableContentWidth,\n    fixedRows = _toRefs.fixedRows,\n    firstFullRow = _toRefs.firstFullRow,\n    lastFullRow = _toRefs.lastFullRow,\n    maxHeight = _toRefs.maxHeight,\n    headerAffixedTop = _toRefs.headerAffixedTop,\n    footerAffixedBottom = _toRefs.footerAffixedBottom,\n    bordered = _toRefs.bordered,\n    resizable = _toRefs.resizable,\n    allowResizeColumnWidth = _toRefs.allowResizeColumnWidth;\n  var data = ref([]);\n  var tableRef = ref();\n  var tableContentRef = ref();\n  var isFixedHeader = ref(false);\n  var isWidthOverflow = ref(false);\n  var tableElmRef = ref();\n  var scrollbarWidth = ref(6);\n  var rowAndColFixedPosition = ref( /* @__PURE__ */new Map());\n  var showColumnShadow = reactive({\n    left: false,\n    right: false\n  });\n  var virtualScrollHeaderPos = ref({\n    left: 0,\n    top: 0\n  });\n  var tableWidth = ref(0);\n  var tableElmWidth = ref(0);\n  var thWidthList = ref({});\n  var isFixedColumn = ref(false);\n  var isFixedRightColumn = ref(false);\n  var isFixedLeftColumn = ref(false);\n  var columnResizable = computed(function () {\n    var _ref, _allowResizeColumnWid;\n    return (_ref = (_allowResizeColumnWid = allowResizeColumnWidth.value) !== null && _allowResizeColumnWid !== void 0 ? _allowResizeColumnWid : resizable.value) !== null && _ref !== void 0 ? _ref : false;\n  });\n  var notNeedThWidthList = computed(function () {\n    var _props$scroll;\n    return !(props.headerAffixedTop || props.footerAffixedBottom || props.horizontalScrollAffixedBottom || ((_props$scroll = props.scroll) === null || _props$scroll === void 0 ? void 0 : _props$scroll.type) === \"virtual\");\n  });\n  function setUseFixedTableElmRef(val) {\n    tableElmRef.value = val;\n  }\n  function getColumnMap(columns2) {\n    var map = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /* @__PURE__ */new Map();\n    var levelNodes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var level = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    var parent = arguments.length > 4 ? arguments[4] : undefined;\n    for (var i = 0, len = columns2.length; i < len; i++) {\n      var _col$children;\n      var col = columns2[i];\n      if ([\"left\", \"right\"].includes(col.fixed)) {\n        isFixedColumn.value = true;\n      }\n      if (col.fixed === \"right\") {\n        isFixedRightColumn.value = true;\n      }\n      if (col.fixed === \"left\") {\n        isFixedLeftColumn.value = true;\n      }\n      var key = col.colKey || i;\n      var columnInfo = {\n        col: col,\n        parent: parent,\n        index: i\n      };\n      map.set(key, columnInfo);\n      if ((_col$children = col.children) !== null && _col$children !== void 0 && _col$children.length) {\n        getColumnMap(col.children, map, levelNodes, level + 1, columnInfo);\n      }\n      if (levelNodes[level]) {\n        levelNodes[level].push(columnInfo);\n      } else {\n        levelNodes[level] = [columnInfo];\n      }\n    }\n    return {\n      newColumnsMap: map,\n      levelNodes: levelNodes\n    };\n  }\n  var setFixedLeftPos = function setFixedLeftPos(columns2, initialColumnMap) {\n    var parent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    for (var i = 0, len = columns2.length; i < len; i++) {\n      var _col$children2;\n      var col = columns2[i];\n      if (col.fixed === \"right\") return;\n      var colInfo = initialColumnMap.get(col.colKey || i);\n      var lastColIndex = i - 1;\n      while (lastColIndex >= 0 && columns2[lastColIndex].fixed !== \"left\") {\n        lastColIndex -= 1;\n      }\n      var lastCol = columns2[lastColIndex];\n      var defaultWidth = i === 0 ? (parent === null || parent === void 0 ? void 0 : parent.left) || 0 : 0;\n      var lastColInfo = initialColumnMap.get((lastCol === null || lastCol === void 0 ? void 0 : lastCol.colKey) || i - 1);\n      if (colInfo) {\n        colInfo.left = ((lastColInfo === null || lastColInfo === void 0 ? void 0 : lastColInfo.left) || defaultWidth) + ((lastColInfo === null || lastColInfo === void 0 ? void 0 : lastColInfo.width) || 0);\n      }\n      if ((_col$children2 = col.children) !== null && _col$children2 !== void 0 && _col$children2.length) {\n        setFixedLeftPos(col.children, initialColumnMap, colInfo);\n      }\n    }\n  };\n  var setFixedRightPos = function setFixedRightPos(columns2, initialColumnMap) {\n    var parent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    for (var i = columns2.length - 1; i >= 0; i--) {\n      var _col$children3;\n      var col = columns2[i];\n      if (col.fixed === \"left\") return;\n      var colInfo = initialColumnMap.get(col.colKey || i);\n      var lastColIndex = i + 1;\n      while (lastColIndex < columns2.length && columns2[lastColIndex].fixed !== \"right\") {\n        lastColIndex += 1;\n      }\n      var lastCol = columns2[lastColIndex];\n      var defaultWidth = i === columns2.length - 1 ? (parent === null || parent === void 0 ? void 0 : parent.right) || 0 : 0;\n      var lastColInfo = initialColumnMap.get((lastCol === null || lastCol === void 0 ? void 0 : lastCol.colKey) || i + 1);\n      if (colInfo) {\n        colInfo.right = ((lastColInfo === null || lastColInfo === void 0 ? void 0 : lastColInfo.right) || defaultWidth) + ((lastColInfo === null || lastColInfo === void 0 ? void 0 : lastColInfo.width) || 0);\n      }\n      if ((_col$children3 = col.children) !== null && _col$children3 !== void 0 && _col$children3.length) {\n        setFixedRightPos(col.children, initialColumnMap, colInfo);\n      }\n    }\n  };\n  var setFixedColPosition = function setFixedColPosition(trList, initialColumnMap) {\n    if (!trList) return;\n    for (var i = 0, len = trList.length; i < len; i++) {\n      var thList = trList[i].children;\n      for (var j = 0, thLen = thList.length; j < thLen; j++) {\n        var _obj$col;\n        var th = thList[j];\n        var colKey = th.dataset.colkey;\n        if (!colKey) {\n          log.warn(\"TDesign Table\", \"\".concat(th.innerText, \" missing colKey. colKey is required for fixed column feature.\"));\n        }\n        var obj = initialColumnMap.get(colKey || j);\n        if (obj !== null && obj !== void 0 && (_obj$col = obj.col) !== null && _obj$col !== void 0 && _obj$col.fixed) {\n          initialColumnMap.set(colKey, _objectSpread(_objectSpread({}, obj), {}, {\n            width: th.getBoundingClientRect().width\n          }));\n        }\n      }\n    }\n    setFixedLeftPos(columns.value, initialColumnMap);\n    setFixedRightPos(columns.value, initialColumnMap);\n  };\n  var setFixedRowPosition = function setFixedRowPosition(trList, initialColumnMap, thead, tfoot) {\n    var _ref2 = fixedRows.value || [],\n      _ref3 = _slicedToArray(_ref2, 2),\n      fixedTopRows = _ref3[0],\n      fixedBottomRows = _ref3[1];\n    var data2 = props.data,\n      _props$rowKey = props.rowKey,\n      rowKey = _props$rowKey === void 0 ? \"id\" : _props$rowKey;\n    for (var i = 0; i < fixedTopRows; i++) {\n      var tr = trList[i];\n      var rowId = get_1(data2[i], rowKey);\n      var thisRowInfo = initialColumnMap.get(rowId) || {};\n      var lastRowId = get_1(data2[i - 1], rowKey);\n      var lastRowInfo = initialColumnMap.get(lastRowId) || {};\n      var defaultBottom = 0;\n      if (i === 0) {\n        defaultBottom = (thead === null || thead === void 0 ? void 0 : thead.getBoundingClientRect().height) || 0;\n      }\n      thisRowInfo.top = (lastRowInfo.top || defaultBottom) + (lastRowInfo.height || 0);\n      initialColumnMap.set(rowId, _objectSpread(_objectSpread({}, thisRowInfo), {}, {\n        height: (tr === null || tr === void 0 ? void 0 : tr.getBoundingClientRect().height) || 0\n      }));\n    }\n    for (var _i = data2.length - 1; _i >= data2.length - fixedBottomRows; _i--) {\n      var _tr = trList[_i];\n      var _rowId = get_1(data2[_i], rowKey);\n      var _thisRowInfo = initialColumnMap.get(_rowId) || {};\n      var _lastRowId = get_1(data2[_i + 1], rowKey);\n      var _lastRowInfo = initialColumnMap.get(_lastRowId) || {};\n      var _defaultBottom = 0;\n      if (_i === data2.length - 1) {\n        _defaultBottom = (tfoot === null || tfoot === void 0 ? void 0 : tfoot.getBoundingClientRect().height) || 0;\n      }\n      _thisRowInfo.bottom = (_lastRowInfo.bottom || _defaultBottom) + (_lastRowInfo.height || 0);\n      initialColumnMap.set(_rowId, _objectSpread(_objectSpread({}, _thisRowInfo), {}, {\n        height: (_tr === null || _tr === void 0 ? void 0 : _tr.getBoundingClientRect().height) || 0\n      }));\n    }\n  };\n  var updateRowAndColFixedPosition = function updateRowAndColFixedPosition(tableContentElm, initialColumnMap) {\n    rowAndColFixedPosition.value.clear();\n    if (!tableContentElm) return;\n    var thead = tableContentElm.querySelector(\"thead\");\n    thead && setFixedColPosition(thead.children, initialColumnMap);\n    var tbody = tableContentElm.querySelector(\"tbody\");\n    var tfoot = tableContentElm.querySelector(\"tfoot\");\n    tbody && setFixedRowPosition(tbody.children, initialColumnMap, thead, tfoot);\n    rowAndColFixedPosition.value = initialColumnMap;\n  };\n  var shadowLastScrollLeft;\n  var updateColumnFixedShadow = function updateColumnFixedShadow(target, extra) {\n    if (!isFixedColumn.value || !target) return;\n    var scrollLeft = target.scrollLeft;\n    if (shadowLastScrollLeft === scrollLeft && (!extra || !extra.skipScrollLimit)) return;\n    shadowLastScrollLeft = scrollLeft;\n    var isShowRight = target.clientWidth + scrollLeft < target.scrollWidth;\n    var isShowLeft = scrollLeft > 0;\n    if (showColumnShadow.left === isShowLeft && showColumnShadow.right === isShowRight) return;\n    showColumnShadow.left = isShowLeft && isFixedLeftColumn.value;\n    showColumnShadow.right = isShowRight && isFixedRightColumn.value;\n  };\n  var setIsLastOrFirstFixedCol = function setIsLastOrFirstFixedCol(levelNodes) {\n    for (var t = 0; t < levelNodes.length; t++) {\n      var nodes = levelNodes[t];\n      for (var i = 0, len = nodes.length; i < len; i++) {\n        var colMapInfo = nodes[i];\n        var nextColMapInfo = nodes[i + 1];\n        var parent = colMapInfo.parent;\n        var isParentLastLeftFixedCol = !parent || (parent === null || parent === void 0 ? void 0 : parent.lastLeftFixedCol);\n        if (isParentLastLeftFixedCol && colMapInfo.col.fixed === \"left\" && (nextColMapInfo === null || nextColMapInfo === void 0 ? void 0 : nextColMapInfo.col.fixed) !== \"left\") {\n          colMapInfo.lastLeftFixedCol = true;\n        }\n        var lastColMapInfo = nodes[i - 1];\n        var isParentFirstRightFixedCol = !parent || (parent === null || parent === void 0 ? void 0 : parent.firstRightFixedCol);\n        if (isParentFirstRightFixedCol && colMapInfo.col.fixed === \"right\" && (lastColMapInfo === null || lastColMapInfo === void 0 ? void 0 : lastColMapInfo.col.fixed) !== \"right\") {\n          colMapInfo.firstRightFixedCol = true;\n        }\n      }\n    }\n  };\n  var updateFixedStatus = function updateFixedStatus() {\n    var _getColumnMap = getColumnMap(columns.value),\n      newColumnsMap = _getColumnMap.newColumnsMap,\n      levelNodes = _getColumnMap.levelNodes;\n    setIsLastOrFirstFixedCol(levelNodes);\n    var timer = setTimeout(function () {\n      var _fixedRows$value;\n      if (isFixedColumn.value || (_fixedRows$value = fixedRows.value) !== null && _fixedRows$value !== void 0 && _fixedRows$value.length) {\n        updateRowAndColFixedPosition(tableContentRef.value, newColumnsMap);\n      }\n      clearTimeout(timer);\n    }, 0);\n    return function () {\n      clearTimeout(timer);\n    };\n  };\n  var updateFixedHeader = function updateFixedHeader() {\n    var timer = setTimeout(function () {\n      if (!tableContentRef.value) return;\n      isFixedHeader.value = tableContentRef.value.scrollHeight > tableContentRef.value.clientHeight;\n      isWidthOverflow.value = tableContentRef.value.scrollWidth > tableContentRef.value.clientWidth;\n      var pos = tableContentRef.value.getBoundingClientRect();\n      virtualScrollHeaderPos.value = {\n        top: pos.top,\n        left: pos.left\n      };\n      clearTimeout(timer);\n    }, 0);\n  };\n  var setTableElmWidth = function setTableElmWidth(width) {\n    if (tableElmWidth.value === width) return;\n    tableElmWidth.value = width;\n  };\n  var updateTableWidth = function updateTableWidth() {\n    var _tableContentRef$valu, _tableElmRef$value;\n    var rect = (_tableContentRef$valu = tableContentRef.value) === null || _tableContentRef$valu === void 0 ? void 0 : _tableContentRef$valu.getBoundingClientRect();\n    if (!rect) return;\n    var reduceWidth = isFixedHeader.value ? scrollbarWidth.value : 0;\n    tableWidth.value = rect.width - reduceWidth - (props.bordered ? 1 : 0);\n    var elmRect = tableElmRef === null || tableElmRef === void 0 || (_tableElmRef$value = tableElmRef.value) === null || _tableElmRef$value === void 0 ? void 0 : _tableElmRef$value.getBoundingClientRect();\n    (elmRect === null || elmRect === void 0 ? void 0 : elmRect.width) && setTableElmWidth(elmRect.width);\n  };\n  var updateAffixPosition = function updateAffixPosition() {\n    var _affixRef$paginationA, _affixRef$paginationA2, _affixRef$horizontalS, _affixRef$horizontalS2, _affixRef$headerTopAf, _affixRef$headerTopAf2, _affixRef$footerBotto, _affixRef$footerBotto2;\n    (_affixRef$paginationA = affixRef.paginationAffixRef.value) === null || _affixRef$paginationA === void 0 || (_affixRef$paginationA2 = _affixRef$paginationA.handleScroll) === null || _affixRef$paginationA2 === void 0 || _affixRef$paginationA2.call(_affixRef$paginationA);\n    (_affixRef$horizontalS = affixRef.horizontalScrollAffixRef.value) === null || _affixRef$horizontalS === void 0 || (_affixRef$horizontalS2 = _affixRef$horizontalS.handleScroll) === null || _affixRef$horizontalS2 === void 0 || _affixRef$horizontalS2.call(_affixRef$horizontalS);\n    (_affixRef$headerTopAf = affixRef.headerTopAffixRef.value) === null || _affixRef$headerTopAf === void 0 || (_affixRef$headerTopAf2 = _affixRef$headerTopAf.handleScroll) === null || _affixRef$headerTopAf2 === void 0 || _affixRef$headerTopAf2.call(_affixRef$headerTopAf);\n    (_affixRef$footerBotto = affixRef.footerBottomAffixRef.value) === null || _affixRef$footerBotto === void 0 || (_affixRef$footerBotto2 = _affixRef$footerBotto.handleScroll) === null || _affixRef$footerBotto2 === void 0 || _affixRef$footerBotto2.call(_affixRef$footerBotto);\n  };\n  var calculateThWidthList = function calculateThWidthList(trList) {\n    var widthMap = {};\n    for (var i = 0, len = trList.length; i < len; i++) {\n      var thList = trList[i].children;\n      for (var j = 0, thLen = thList.length; j < thLen; j++) {\n        var th = thList[j];\n        var colKey = th.dataset.colkey;\n        widthMap[colKey] = th.getBoundingClientRect().width;\n      }\n    }\n    return widthMap;\n  };\n  var updateThWidthList = function updateThWidthList(trList) {\n    if (trList instanceof HTMLCollection) {\n      if (columnResizable.value) return;\n      thWidthList.value = calculateThWidthList(trList);\n    } else {\n      thWidthList.value = thWidthList.value || {};\n      Object.entries(trList).forEach(function (_ref4) {\n        var _ref5 = _slicedToArray(_ref4, 2),\n          colKey = _ref5[0],\n          width = _ref5[1];\n        thWidthList.value[colKey] = width;\n      });\n    }\n    return thWidthList.value;\n  };\n  var updateThWidthListHandler = function updateThWidthListHandler() {\n    var timer = setTimeout(function () {\n      var _tableContentRef$valu2;\n      updateTableWidth();\n      if (notNeedThWidthList.value) return;\n      var thead = (_tableContentRef$valu2 = tableContentRef.value) === null || _tableContentRef$valu2 === void 0 ? void 0 : _tableContentRef$valu2.querySelector(\"thead\");\n      if (!thead) return;\n      updateThWidthList(thead.children);\n      clearTimeout(timer);\n    }, 0);\n  };\n  var resetThWidthList = function resetThWidthList() {\n    thWidthList.value = {};\n  };\n  var emitScrollEvent = function emitScrollEvent(e) {\n    var _props$onScrollX, _props$onScrollY, _props$onScroll;\n    (_props$onScrollX = props.onScrollX) === null || _props$onScrollX === void 0 || _props$onScrollX.call(props, {\n      e: e\n    });\n    (_props$onScrollY = props.onScrollY) === null || _props$onScrollY === void 0 || _props$onScrollY.call(props, {\n      e: e\n    });\n    (_props$onScroll = props.onScroll) === null || _props$onScroll === void 0 || _props$onScroll.call(props, {\n      e: e\n    });\n  };\n  var getThWidthList = function getThWidthList(type) {\n    if (type === \"calculate\") {\n      var _tableContentRef$valu3;\n      var trList = (_tableContentRef$valu3 = tableContentRef.value) === null || _tableContentRef$valu3 === void 0 || (_tableContentRef$valu3 = _tableContentRef$valu3.querySelector(\"thead\")) === null || _tableContentRef$valu3 === void 0 ? void 0 : _tableContentRef$valu3.children;\n      return calculateThWidthList(trList);\n    }\n    return thWidthList.value || {};\n  };\n  watch([data, columns, bordered, tableLayout, tableContentWidth, isFixedHeader, isWidthOverflow, isFixedColumn, fixedRows, firstFullRow, lastFullRow], updateFixedStatus, {\n    immediate: true\n  });\n  watch([isFixedColumn, columns], function () {\n    var timer = setTimeout(function () {\n      if (isFixedColumn.value) {\n        updateColumnFixedShadow(tableContentRef.value);\n      }\n      clearTimeout(timer);\n    }, 0);\n  }, {\n    immediate: true\n  });\n  watch([maxHeight, data, columns, bordered, tableContentRef], function () {\n    if (tableContentRef.value) {\n      updateFixedHeader();\n    }\n  }, {\n    immediate: true\n  });\n  watch(finalColumns, function () {\n    resetThWidthList();\n  });\n  watch([data, bordered, tableLayout, fixedRows, isFixedHeader, headerAffixedTop, footerAffixedBottom, tableContentWidth], function () {\n    var timer = setTimeout(function () {\n      updateThWidthListHandler();\n      updateAffixPosition();\n      clearTimeout(timer);\n    }, 60);\n  }, {\n    immediate: true\n  });\n  watch([finalColumns], function (_ref6, _ref7) {\n    var _ref8 = _slicedToArray(_ref6, 1),\n      finalColumns2 = _ref8[0];\n    var _ref9 = _slicedToArray(_ref7, 1),\n      preFinalColumns = _ref9[0];\n    var finalColKeys = finalColumns2.map(function (t) {\n      return t.colKey;\n    });\n    var preColKeys = preFinalColumns.map(function (t) {\n      return t.colKey;\n    });\n    if (finalColKeys.length < preColKeys.length) {\n      var reduceKeys = xorWith_1(preColKeys, finalColKeys);\n      var thWidthList2 = getThWidthList(\"calculate\");\n      var reduceWidth = 0;\n      reduceKeys.forEach(function (key) {\n        reduceWidth += thWidthList2[key];\n      });\n      var rootThWidthList = pick_1(thWidthList2, preColKeys);\n      var oldTotalWidth = Object.values(rootThWidthList).reduce(function () {\n        var r = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var n = arguments.length > 1 ? arguments[1] : undefined;\n        return r + n;\n      });\n      var contentWidth = tableContentRef.value.clientWidth;\n      var widthToReserve = oldTotalWidth - reduceWidth;\n      setTableElmWidth(Math.max(contentWidth, widthToReserve));\n    }\n  });\n  var refreshTable = function refreshTable() {\n    updateThWidthListHandler();\n    updateFixedHeader();\n    updateAffixPosition();\n    if (isFixedColumn.value || isFixedHeader.value) {\n      updateFixedStatus();\n      updateColumnFixedShadow(tableContentRef.value, {\n        skipScrollLimit: true\n      });\n    }\n  };\n  var onResize = debounce_1(function () {\n    refreshTable();\n  }, 30);\n  var resizeObserver = null;\n  function addTableResizeObserver(tableElement) {\n    if (typeof window === \"undefined\") return;\n    if (getIEVersion() < 11 || typeof window.ResizeObserver === \"undefined\") return;\n    off(window, \"resize\", onResize);\n    resizeObserver = new window.ResizeObserver(function () {\n      var timer = setTimeout(function () {\n        refreshTable();\n        clearTimeout(timer);\n      }, 200);\n    });\n    resizeObserver.observe(tableElement);\n    tableRef.value = tableElement;\n  }\n  onMounted(function () {\n    var scrollWidth = getScrollbarWidthWithCSS();\n    scrollbarWidth.value = scrollWidth;\n    updateThWidthListHandler();\n    var isWatchResize = isFixedColumn.value || isFixedHeader.value || !notNeedThWidthList.value || !data.value.length;\n    var hasWindow = typeof window !== \"undefined\";\n    var hasResizeObserver = hasWindow && typeof window.ResizeObserver !== \"undefined\";\n    if (isWatchResize && getIEVersion() < 11 || !hasResizeObserver) {\n      on(window, \"resize\", onResize);\n    }\n  });\n  onBeforeUnmount(function () {\n    var _resizeObserver, _resizeObserver2;\n    if (typeof window !== \"undefined\") {\n      off(window, \"resize\", onResize);\n    }\n    (_resizeObserver = resizeObserver) === null || _resizeObserver === void 0 || _resizeObserver.unobserve(tableRef.value);\n    (_resizeObserver2 = resizeObserver) === null || _resizeObserver2 === void 0 || _resizeObserver2.disconnect();\n  });\n  var setData = function setData(dataSource) {\n    data.value = dataSource;\n  };\n  var updateTableAfterColumnResize = function updateTableAfterColumnResize() {\n    updateFixedStatus();\n    updateFixedHeader();\n  };\n  return {\n    tableWidth: tableWidth,\n    tableElmWidth: tableElmWidth,\n    thWidthList: thWidthList,\n    isFixedHeader: isFixedHeader,\n    isWidthOverflow: isWidthOverflow,\n    tableContentRef: tableContentRef,\n    isFixedColumn: isFixedColumn,\n    showColumnShadow: showColumnShadow,\n    rowAndColFixedPosition: rowAndColFixedPosition,\n    virtualScrollHeaderPos: virtualScrollHeaderPos,\n    scrollbarWidth: scrollbarWidth,\n    setData: setData,\n    refreshTable: refreshTable,\n    setTableElmWidth: setTableElmWidth,\n    emitScrollEvent: emitScrollEvent,\n    updateThWidthListHandler: updateThWidthListHandler,\n    updateColumnFixedShadow: updateColumnFixedShadow,\n    setUseFixedTableElmRef: setUseFixedTableElmRef,\n    getThWidthList: getThWidthList,\n    updateThWidthList: updateThWidthList,\n    addTableResizeObserver: addTableResizeObserver,\n    updateTableAfterColumnResize: updateTableAfterColumnResize\n  };\n}\nexport { useFixed as default, getColumnFixedStyles, getRowFixedStyles };","map":{"version":3,"names":["noop$1","noop_1","Set","_Set","noop","setToArray$1","_setToArray","INFINITY","createSet$1","values","_createSet","SetCache","_SetCache","arrayIncludes","_arrayIncludes","arrayIncludesWith","_arrayIncludesWith","cacheHas","_cacheHas","createSet","setToArray","LARGE_ARRAY_SIZE","baseUniq$1","array","iteratee","comparator","index","includes","length","isCommon","result","seen","set","outer","value","computed","seenIndex","push","_baseUniq","baseDifference","_baseDifference","baseFlatten","_baseFlatten","baseUniq","baseXor$1","arrays","Array","othIndex","_baseXor","arrayFilter","_arrayFilter","baseRest","_baseRest","baseXor","isArrayLikeObject","isArrayLikeObject_1","last","last_1","xorWith","undefined","xorWith_1","getColumnFixedStyles","col","rowAndColFixedPosition","tableColFixedClasses","fixedPos","get","colKey","thClasses","_defineProperty","left","fixed","right","lastLeft","lastLeftFixedCol","firstRight","firstRightFixedCol","thStyles","concat","style","classes","getRowFixedStyles","rowId","rowIndex","rowLength","fixedRows","tableRowFixedClasses","fixedTop","fixedBottom","firstFixedBottomRow","rowClasses","top","bottom","firstBottom","withoutBorderBottom","rowStyles","useFixed","props","context","finalColumns","affixRef","_toRefs","toRefs","columns","tableLayout","tableContentWidth","firstFullRow","lastFullRow","maxHeight","headerAffixedTop","footerAffixedBottom","bordered","resizable","allowResizeColumnWidth","data","ref","tableRef","tableContentRef","isFixedHeader","isWidthOverflow","tableElmRef","scrollbarWidth","Map","showColumnShadow","reactive","virtualScrollHeaderPos","tableWidth","tableElmWidth","thWidthList","isFixedColumn","isFixedRightColumn","isFixedLeftColumn","columnResizable","_ref","_allowResizeColumnWid","notNeedThWidthList","_props$scroll","horizontalScrollAffixedBottom","scroll","type","setUseFixedTableElmRef","val","getColumnMap","columns2","map","arguments","levelNodes","level","parent","i","len","_col$children","key","columnInfo","children","newColumnsMap","setFixedLeftPos","initialColumnMap","_col$children2","colInfo","lastColIndex","lastCol","defaultWidth","lastColInfo","width","setFixedRightPos","_col$children3","setFixedColPosition","trList","thList","j","thLen","_obj$col","th","dataset","colkey","log","warn","innerText","obj","_objectSpread","getBoundingClientRect","setFixedRowPosition","thead","tfoot","_ref2","_ref3","_slicedToArray","fixedTopRows","fixedBottomRows","data2","_props$rowKey","rowKey","tr","get_1","thisRowInfo","lastRowId","lastRowInfo","defaultBottom","height","_i","_tr","_rowId","_thisRowInfo","_lastRowId","_lastRowInfo","_defaultBottom","updateRowAndColFixedPosition","tableContentElm","clear","querySelector","tbody","shadowLastScrollLeft","updateColumnFixedShadow","target","extra","scrollLeft","skipScrollLimit","isShowRight","clientWidth","scrollWidth","isShowLeft","setIsLastOrFirstFixedCol","t","nodes","colMapInfo","nextColMapInfo","isParentLastLeftFixedCol","lastColMapInfo","isParentFirstRightFixedCol","updateFixedStatus","_getColumnMap","timer","setTimeout","_fixedRows$value","clearTimeout","updateFixedHeader","scrollHeight","clientHeight","pos","setTableElmWidth","updateTableWidth","_tableContentRef$valu","_tableElmRef$value","rect","reduceWidth","elmRect","updateAffixPosition","_affixRef$paginationA","_affixRef$paginationA2","_affixRef$horizontalS","_affixRef$horizontalS2","_affixRef$headerTopAf","_affixRef$headerTopAf2","_affixRef$footerBotto","_affixRef$footerBotto2","paginationAffixRef","handleScroll","call","horizontalScrollAffixRef","headerTopAffixRef","footerBottomAffixRef","calculateThWidthList","widthMap","updateThWidthList","HTMLCollection","Object","entries","forEach","_ref4","_ref5","updateThWidthListHandler","_tableContentRef$valu2","resetThWidthList","emitScrollEvent","e","_props$onScrollX","_props$onScrollY","_props$onScroll","onScrollX","onScrollY","onScroll","getThWidthList","_tableContentRef$valu3","watch","immediate","_ref6","_ref7","_ref8","finalColumns2","_ref9","preFinalColumns","finalColKeys","preColKeys","reduceKeys","thWidthList2","rootThWidthList","pick_1","oldTotalWidth","reduce","r","n","contentWidth","widthToReserve","Math","max","refreshTable","onResize","debounce_1","resizeObserver","addTableResizeObserver","tableElement","window","getIEVersion","ResizeObserver","off","observe","onMounted","getScrollbarWidthWithCSS","isWatchResize","hasWindow","hasResizeObserver","on","onBeforeUnmount","_resizeObserver","_resizeObserver2","unobserve","disconnect","setData","dataSource","updateTableAfterColumnResize"],"sources":["../../../node_modules/lodash/noop.js","../../../node_modules/lodash/_createSet.js","../../../node_modules/lodash/_baseUniq.js","../../../node_modules/lodash/_baseXor.js","../../../node_modules/lodash/xorWith.js","../../../src/table/hooks/useFixed.ts"],"sourcesContent":["/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * The base implementation of methods like `_.xor`, without support for\n * iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of values.\n */\nfunction baseXor(arrays, iteratee, comparator) {\n  var length = arrays.length;\n  if (length < 2) {\n    return length ? baseUniq(arrays[0]) : [];\n  }\n  var index = -1,\n      result = Array(length);\n\n  while (++index < length) {\n    var array = arrays[index],\n        othIndex = -1;\n\n    while (++othIndex < length) {\n      if (othIndex != index) {\n        result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n      }\n    }\n  }\n  return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n}\n\nmodule.exports = baseXor;\n","var arrayFilter = require('./_arrayFilter'),\n    baseRest = require('./_baseRest'),\n    baseXor = require('./_baseXor'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.xor` except that it accepts `comparator` which is\n * invoked to compare elements of `arrays`. The order of result values is\n * determined by the order they occur in the arrays. The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.xorWith(objects, others, _.isEqual);\n * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n */\nvar xorWith = baseRest(function(arrays) {\n  var comparator = last(arrays);\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n});\n\nmodule.exports = xorWith;\n","import {\n  ref,\n  reactive,\n  watch,\n  toRefs,\n  SetupContext,\n  onMounted,\n  computed,\n  ComputedRef,\n  onBeforeUnmount,\n  Ref,\n} from 'vue';\nimport get from 'lodash/get';\nimport debounce from 'lodash/debounce';\nimport xorWith from 'lodash/xorWith';\nimport log from '../../_common/js/log';\nimport { ClassName, Styles } from '../../common';\nimport { BaseTableCol, BaseTableInstanceFunctions, TableRowData, TdBaseTableProps } from '../type';\nimport { getScrollbarWidthWithCSS } from '../../_common/js/utils/getScrollbarWidth';\nimport { on, off } from '../../utils/dom';\nimport { FixedColumnInfo, TableRowFixedClasses, RowAndColFixedPosition, TableColFixedClasses } from '../interface';\nimport { getIEVersion } from '../../_common/js/utils/helper';\nimport pick from 'lodash/pick';\n\n// 固定列相关类名处理\nexport function getColumnFixedStyles(\n  col: TdBaseTableProps['columns'][0],\n  index: number,\n  rowAndColFixedPosition: RowAndColFixedPosition,\n  tableColFixedClasses: TableColFixedClasses,\n): { style?: Styles; classes?: ClassName } {\n  const fixedPos = rowAndColFixedPosition?.get(col.colKey || index);\n  if (!fixedPos) return {};\n  const thClasses = {\n    [tableColFixedClasses.left]: col.fixed === 'left',\n    [tableColFixedClasses.right]: col.fixed === 'right',\n    [tableColFixedClasses.lastLeft]: col.fixed === 'left' && fixedPos.lastLeftFixedCol,\n    [tableColFixedClasses.firstRight]: col.fixed === 'right' && fixedPos.firstRightFixedCol,\n  };\n  const thStyles = {\n    left: col.fixed === 'left' ? `${fixedPos.left}px` : undefined,\n    right: col.fixed === 'right' ? `${fixedPos.right}px` : undefined,\n  };\n  return {\n    style: thStyles,\n    classes: thClasses,\n  };\n}\n\n// 固定行相关类名处理\nexport function getRowFixedStyles(\n  rowId: string | number,\n  rowIndex: number,\n  rowLength: number,\n  fixedRows: TdBaseTableProps['fixedRows'],\n  rowAndColFixedPosition: RowAndColFixedPosition,\n  tableRowFixedClasses: TableRowFixedClasses,\n): { style: Styles; classes: ClassName } {\n  if (!fixedRows || !fixedRows.length) return { style: undefined, classes: undefined };\n  const fixedTop = rowIndex < fixedRows[0];\n  const fixedBottom = rowIndex > rowLength - 1 - fixedRows[1];\n  const firstFixedBottomRow = rowLength - fixedRows[1];\n  const fixedPos = rowAndColFixedPosition?.get(rowId) || {};\n  const rowClasses = {\n    [tableRowFixedClasses.top]: fixedTop,\n    [tableRowFixedClasses.bottom]: fixedBottom,\n    [tableRowFixedClasses.firstBottom]: rowIndex === firstFixedBottomRow,\n    [tableRowFixedClasses.withoutBorderBottom]: rowIndex === firstFixedBottomRow - 1,\n  };\n  const rowStyles = {\n    top: fixedTop ? `${fixedPos.top}px` : undefined,\n    bottom: fixedBottom ? `${fixedPos.bottom}px` : undefined,\n  };\n  return {\n    style: rowStyles,\n    classes: rowClasses,\n  };\n}\n\nexport default function useFixed(\n  props: TdBaseTableProps,\n  context: SetupContext,\n  finalColumns: ComputedRef<BaseTableCol<TableRowData>[]>,\n  affixRef: Record<string, Ref>,\n) {\n  const {\n    columns,\n    tableLayout,\n    tableContentWidth,\n    fixedRows,\n    firstFullRow,\n    lastFullRow,\n    maxHeight,\n    headerAffixedTop,\n    footerAffixedBottom,\n    bordered,\n    resizable,\n    allowResizeColumnWidth,\n  } = toRefs(props);\n  const data = ref<TableRowData[]>([]);\n  const tableRef = ref<HTMLDivElement>();\n  const tableContentRef = ref<HTMLDivElement>();\n  const isFixedHeader = ref(false);\n  const isWidthOverflow = ref(false);\n  const tableElmRef = ref<HTMLTableElement>();\n  // CSS 样式设置了固定 6px\n  const scrollbarWidth = ref(6);\n  // 固定列、固定表头、固定表尾等内容的位置信息\n  const rowAndColFixedPosition = ref<RowAndColFixedPosition>(new Map());\n  const showColumnShadow = reactive({\n    left: false,\n    right: false,\n  });\n  // 虚拟滚动不能使用 CSS sticky 固定表头\n  const virtualScrollHeaderPos = ref<{ left: number; top: number }>({ left: 0, top: 0 });\n  const tableWidth = ref(0);\n  const tableElmWidth = ref(0);\n  const thWidthList = ref<{ [colKey: string]: number }>({});\n\n  const isFixedColumn = ref(false);\n  const isFixedRightColumn = ref(false);\n  const isFixedLeftColumn = ref(false);\n\n  const columnResizable = computed(() => allowResizeColumnWidth.value ?? resizable.value ?? false);\n\n  // 没有表头吸顶，没有虚拟滚动，则不需要表头宽度计算\n  const notNeedThWidthList = computed(\n    () =>\n      !(\n        props.headerAffixedTop ||\n        props.footerAffixedBottom ||\n        props.horizontalScrollAffixedBottom ||\n        props.scroll?.type === 'virtual'\n      ),\n  );\n\n  function setUseFixedTableElmRef(val: HTMLTableElement) {\n    tableElmRef.value = val;\n  }\n\n  function getColumnMap(\n    columns: BaseTableCol[],\n    map: RowAndColFixedPosition = new Map(),\n    levelNodes: FixedColumnInfo[][] = [],\n    level = 0,\n    parent?: FixedColumnInfo,\n  ) {\n    for (let i = 0, len = columns.length; i < len; i++) {\n      const col = columns[i];\n      if (['left', 'right'].includes(col.fixed)) {\n        isFixedColumn.value = true;\n      }\n      if (col.fixed === 'right') {\n        isFixedRightColumn.value = true;\n      }\n      if (col.fixed === 'left') {\n        isFixedLeftColumn.value = true;\n      }\n      const key = col.colKey || i;\n      const columnInfo: FixedColumnInfo = { col, parent, index: i };\n      map.set(key, columnInfo);\n      if (col.children?.length) {\n        getColumnMap(col.children, map, levelNodes, level + 1, columnInfo);\n      }\n      if (levelNodes[level]) {\n        levelNodes[level].push(columnInfo);\n      } else {\n        // eslint-disable-next-line no-param-reassign\n        levelNodes[level] = [columnInfo];\n      }\n    }\n    return {\n      newColumnsMap: map,\n      levelNodes,\n    };\n  }\n\n  const setFixedLeftPos = (\n    columns: BaseTableCol[],\n    initialColumnMap: RowAndColFixedPosition,\n    parent: FixedColumnInfo = {},\n  ) => {\n    for (let i = 0, len = columns.length; i < len; i++) {\n      const col = columns[i];\n      if (col.fixed === 'right') return;\n      const colInfo = initialColumnMap.get(col.colKey || i);\n      let lastColIndex = i - 1;\n      while (lastColIndex >= 0 && columns[lastColIndex].fixed !== 'left') {\n        lastColIndex -= 1;\n      }\n      const lastCol = columns[lastColIndex];\n      // 多级表头，使用父元素作为初始基本位置\n      const defaultWidth = i === 0 ? parent?.left || 0 : 0;\n      const lastColInfo = initialColumnMap.get(lastCol?.colKey || i - 1);\n      if (colInfo) {\n        colInfo.left = (lastColInfo?.left || defaultWidth) + (lastColInfo?.width || 0);\n      }\n      // 多级表头\n      if (col.children?.length) {\n        setFixedLeftPos(col.children, initialColumnMap, colInfo);\n      }\n    }\n  };\n\n  const setFixedRightPos = (\n    columns: BaseTableCol[],\n    initialColumnMap: RowAndColFixedPosition,\n    parent: FixedColumnInfo = {},\n  ) => {\n    for (let i = columns.length - 1; i >= 0; i--) {\n      const col = columns[i];\n      if (col.fixed === 'left') return;\n      const colInfo = initialColumnMap.get(col.colKey || i);\n      let lastColIndex = i + 1;\n      while (lastColIndex < columns.length && columns[lastColIndex].fixed !== 'right') {\n        lastColIndex += 1;\n      }\n      const lastCol = columns[lastColIndex];\n      // 多级表头，使用父元素作为初始基本位置\n      const defaultWidth = i === columns.length - 1 ? parent?.right || 0 : 0;\n      const lastColInfo = initialColumnMap.get(lastCol?.colKey || i + 1);\n      if (colInfo) {\n        colInfo.right = (lastColInfo?.right || defaultWidth) + (lastColInfo?.width || 0);\n      }\n      // 多级表头\n      if (col.children?.length) {\n        setFixedRightPos(col.children, initialColumnMap, colInfo);\n      }\n    }\n  };\n\n  // 获取固定列位置信息。先获取节点宽度，再计算\n  const setFixedColPosition = (trList: HTMLCollection, initialColumnMap: RowAndColFixedPosition) => {\n    if (!trList) return;\n    for (let i = 0, len = trList.length; i < len; i++) {\n      const thList = trList[i].children;\n      for (let j = 0, thLen = thList.length; j < thLen; j++) {\n        const th = thList[j] as HTMLElement;\n        const colKey = th.dataset.colkey;\n        if (!colKey) {\n          log.warn('TDesign Table', `${th.innerText} missing colKey. colKey is required for fixed column feature.`);\n        }\n        const obj = initialColumnMap.get(colKey || j);\n        if (obj?.col?.fixed) {\n          initialColumnMap.set(colKey, { ...obj, width: th.getBoundingClientRect().width });\n        }\n      }\n    }\n    setFixedLeftPos(columns.value, initialColumnMap);\n    setFixedRightPos(columns.value, initialColumnMap);\n  };\n\n  // 设置固定行位置信息 top/bottom\n  const setFixedRowPosition = (\n    trList: HTMLCollection,\n    initialColumnMap: RowAndColFixedPosition,\n    thead: HTMLTableSectionElement,\n    tfoot: HTMLTableSectionElement,\n  ) => {\n    const [fixedTopRows, fixedBottomRows] = fixedRows.value || [];\n    const { data, rowKey = 'id' } = props;\n    for (let i = 0; i < fixedTopRows; i++) {\n      const tr = trList[i] as HTMLElement;\n      const rowId = get(data[i], rowKey);\n      const thisRowInfo = initialColumnMap.get(rowId) || {};\n      const lastRowId = get(data[i - 1], rowKey);\n      const lastRowInfo = initialColumnMap.get(lastRowId) || {};\n      let defaultBottom = 0;\n      if (i === 0) {\n        defaultBottom = thead?.getBoundingClientRect().height || 0;\n      }\n      thisRowInfo.top = (lastRowInfo.top || defaultBottom) + (lastRowInfo.height || 0);\n      initialColumnMap.set(rowId, { ...thisRowInfo, height: tr?.getBoundingClientRect().height || 0 });\n    }\n    for (let i = data.length - 1; i >= data.length - fixedBottomRows; i--) {\n      const tr = trList[i] as HTMLElement;\n      const rowId = get(data[i], rowKey);\n      const thisRowInfo = initialColumnMap.get(rowId) || {};\n      const lastRowId = get(data[i + 1], rowKey);\n      const lastRowInfo = initialColumnMap.get(lastRowId) || {};\n      let defaultBottom = 0;\n      if (i === data.length - 1) {\n        defaultBottom = tfoot?.getBoundingClientRect().height || 0;\n      }\n      thisRowInfo.bottom = (lastRowInfo.bottom || defaultBottom) + (lastRowInfo.height || 0);\n      initialColumnMap.set(rowId, { ...thisRowInfo, height: tr?.getBoundingClientRect().height || 0 });\n    }\n  };\n\n  const updateRowAndColFixedPosition = (tableContentElm: HTMLElement, initialColumnMap: RowAndColFixedPosition) => {\n    rowAndColFixedPosition.value.clear();\n    if (!tableContentElm) return;\n    const thead = tableContentElm.querySelector('thead');\n    // 处理固定列\n    thead && setFixedColPosition(thead.children, initialColumnMap);\n    // 处理冻结行\n    const tbody = tableContentElm.querySelector('tbody');\n    const tfoot = tableContentElm.querySelector('tfoot');\n    tbody && setFixedRowPosition(tbody.children, initialColumnMap, thead, tfoot);\n    // 更新最终 Map\n    rowAndColFixedPosition.value = initialColumnMap;\n  };\n\n  let shadowLastScrollLeft: number;\n  const updateColumnFixedShadow = (target: HTMLElement, extra?: { skipScrollLimit?: boolean }) => {\n    if (!isFixedColumn.value || !target) return;\n    const { scrollLeft } = target;\n    // 只有左右滚动，需要更新固定列阴影\n    if (shadowLastScrollLeft === scrollLeft && (!extra || !extra.skipScrollLimit)) return;\n    shadowLastScrollLeft = scrollLeft;\n    const isShowRight = target.clientWidth + scrollLeft < target.scrollWidth;\n    const isShowLeft = scrollLeft > 0;\n    if (showColumnShadow.left === isShowLeft && showColumnShadow.right === isShowRight) return;\n    showColumnShadow.left = isShowLeft && isFixedLeftColumn.value;\n    showColumnShadow.right = isShowRight && isFixedRightColumn.value;\n  };\n\n  // 多级表头场景较为复杂：为了滚动的阴影效果，需要知道哪些列是边界列，左侧固定列的最后一列，右侧固定列的第一列，每一层表头都需要兼顾\n  const setIsLastOrFirstFixedCol = (levelNodes: FixedColumnInfo[][]) => {\n    for (let t = 0; t < levelNodes.length; t++) {\n      const nodes = levelNodes[t];\n      for (let i = 0, len = nodes.length; i < len; i++) {\n        const colMapInfo = nodes[i];\n        const nextColMapInfo = nodes[i + 1];\n        const { parent } = colMapInfo;\n        const isParentLastLeftFixedCol = !parent || parent?.lastLeftFixedCol;\n        if (isParentLastLeftFixedCol && colMapInfo.col.fixed === 'left' && nextColMapInfo?.col.fixed !== 'left') {\n          colMapInfo.lastLeftFixedCol = true;\n        }\n        const lastColMapInfo = nodes[i - 1];\n        const isParentFirstRightFixedCol = !parent || parent?.firstRightFixedCol;\n        if (isParentFirstRightFixedCol && colMapInfo.col.fixed === 'right' && lastColMapInfo?.col.fixed !== 'right') {\n          colMapInfo.firstRightFixedCol = true;\n        }\n      }\n    }\n  };\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const updateFixedStatus = () => {\n    const { newColumnsMap, levelNodes } = getColumnMap(columns.value);\n    setIsLastOrFirstFixedCol(levelNodes);\n    const timer = setTimeout(() => {\n      if (isFixedColumn.value || fixedRows.value?.length) {\n        updateRowAndColFixedPosition(tableContentRef.value, newColumnsMap);\n      }\n      clearTimeout(timer);\n    }, 0);\n    return () => {\n      clearTimeout(timer);\n    };\n  };\n\n  const updateFixedHeader = () => {\n    const timer = setTimeout(() => {\n      if (!tableContentRef.value) return;\n      isFixedHeader.value = tableContentRef.value.scrollHeight > tableContentRef.value.clientHeight;\n      isWidthOverflow.value = tableContentRef.value.scrollWidth > tableContentRef.value.clientWidth;\n      const pos = tableContentRef.value.getBoundingClientRect();\n      virtualScrollHeaderPos.value = {\n        top: pos.top,\n        left: pos.left,\n      };\n      clearTimeout(timer);\n    }, 0);\n  };\n\n  const setTableElmWidth = (width: number) => {\n    if (tableElmWidth.value === width) return;\n    tableElmWidth.value = width;\n  };\n\n  const updateTableWidth = () => {\n    const rect = tableContentRef.value?.getBoundingClientRect();\n    if (!rect) return;\n    // 存在纵向滚动条，且固定表头时，需去除滚动条宽度\n    const reduceWidth = isFixedHeader.value ? scrollbarWidth.value : 0;\n    tableWidth.value = rect.width - reduceWidth - (props.bordered ? 1 : 0);\n    const elmRect = tableElmRef?.value?.getBoundingClientRect();\n    elmRect?.width && setTableElmWidth(elmRect.width);\n  };\n\n  const updateAffixPosition = () => {\n    // 在表格高度变化的时候 需要手动调整affix的位置 因为affix本身无法监听到这些变化触发重新计算\n    affixRef.paginationAffixRef.value?.handleScroll?.();\n    affixRef.horizontalScrollAffixRef.value?.handleScroll?.();\n    affixRef.headerTopAffixRef.value?.handleScroll?.();\n    affixRef.footerBottomAffixRef.value?.handleScroll?.();\n  };\n\n  const calculateThWidthList = (trList: HTMLCollection) => {\n    const widthMap: { [colKey: string]: number } = {};\n    for (let i = 0, len = trList.length; i < len; i++) {\n      const thList = trList[i].children;\n      // second for used for multiple row header\n      for (let j = 0, thLen = thList.length; j < thLen; j++) {\n        const th = thList[j] as HTMLElement;\n        const colKey = th.dataset.colkey;\n        widthMap[colKey] = th.getBoundingClientRect().width;\n      }\n    }\n    return widthMap;\n  };\n\n  const updateThWidthList = (trList: HTMLCollection | { [colKey: string]: number }) => {\n    if (trList instanceof HTMLCollection) {\n      if (columnResizable.value) return;\n      thWidthList.value = calculateThWidthList(trList);\n    } else {\n      thWidthList.value = thWidthList.value || {};\n      Object.entries(trList).forEach(([colKey, width]) => {\n        thWidthList.value[colKey] = width;\n      });\n    }\n    return thWidthList.value;\n  };\n\n  const updateThWidthListHandler = () => {\n    const timer = setTimeout(() => {\n      updateTableWidth();\n      if (notNeedThWidthList.value) return;\n      const thead = tableContentRef.value?.querySelector('thead');\n      if (!thead) return;\n      updateThWidthList(thead.children);\n      clearTimeout(timer);\n    }, 0);\n  };\n\n  const resetThWidthList = () => {\n    thWidthList.value = {};\n  };\n\n  const emitScrollEvent = (e: WheelEvent) => {\n    props.onScrollX?.({ e });\n    props.onScrollY?.({ e });\n    props.onScroll?.({ e });\n  };\n\n  const getThWidthList = (type?: 'default' | 'calculate') => {\n    if (type === 'calculate') {\n      const trList = tableContentRef.value?.querySelector('thead')?.children;\n      return calculateThWidthList(trList);\n    }\n    return thWidthList.value || {};\n  };\n\n  watch(\n    [\n      data,\n      columns,\n      bordered,\n      tableLayout,\n      tableContentWidth,\n      isFixedHeader,\n      isWidthOverflow,\n      isFixedColumn,\n      fixedRows,\n      firstFullRow,\n      lastFullRow,\n    ],\n    updateFixedStatus,\n    { immediate: true },\n  );\n\n  watch(\n    [isFixedColumn, columns],\n    () => {\n      const timer = setTimeout(() => {\n        if (isFixedColumn.value) {\n          updateColumnFixedShadow(tableContentRef.value);\n        }\n        clearTimeout(timer);\n      }, 0);\n    },\n    { immediate: true },\n  );\n\n  watch(\n    [maxHeight, data, columns, bordered, tableContentRef],\n    () => {\n      if (tableContentRef.value) {\n        // 如果不监听元素的ref，会出现watch在ref还没ready的时候触发，此时没有触发这个判断的更新，导致表头消失\n        updateFixedHeader();\n      }\n    },\n    { immediate: true },\n  );\n\n  watch(finalColumns, () => {\n    resetThWidthList();\n  });\n\n  // 影响表头宽度的元素\n  watch(\n    [data, bordered, tableLayout, fixedRows, isFixedHeader, headerAffixedTop, footerAffixedBottom, tableContentWidth],\n    () => {\n      const timer = setTimeout(() => {\n        updateThWidthListHandler();\n        updateAffixPosition();\n        clearTimeout(timer);\n      }, 60);\n    },\n    { immediate: true },\n  );\n\n  watch([finalColumns], ([finalColumns], [preFinalColumns]) => {\n    const finalColKeys = finalColumns.map((t) => t.colKey);\n    const preColKeys = preFinalColumns.map((t) => t.colKey);\n    if (finalColKeys.length < preColKeys.length) {\n      const reduceKeys = xorWith(preColKeys, finalColKeys);\n      const thWidthList = getThWidthList('calculate');\n      let reduceWidth = 0;\n      reduceKeys.forEach((key) => {\n        reduceWidth += thWidthList[key];\n      });\n      const rootThWidthList = pick(thWidthList, preColKeys);\n      const oldTotalWidth = Object.values(rootThWidthList).reduce((r = 0, n) => r + n);\n      // 保留原有可能编辑过的列宽度，但是当剩余列过小时，表头小于内容宽，需要缩放回内容宽度\n      // 使用不包含滚动条的可视化区域宽度，意味着当不再溢出的时候，将宽度设置回完整宽度\n      const contentWidth = tableContentRef.value.clientWidth;\n      const widthToReserve = oldTotalWidth - reduceWidth;\n      setTableElmWidth(Math.max(contentWidth, widthToReserve));\n    }\n  });\n\n  const refreshTable: BaseTableInstanceFunctions['refreshTable'] = () => {\n    // updateTableWidth();\n    updateThWidthListHandler();\n    updateFixedHeader();\n    updateAffixPosition();\n\n    if (isFixedColumn.value || isFixedHeader.value) {\n      updateFixedStatus();\n      updateColumnFixedShadow(tableContentRef.value, { skipScrollLimit: true });\n    }\n  };\n\n  const onResize = debounce(() => {\n    refreshTable();\n  }, 30);\n\n  let resizeObserver: ResizeObserver = null;\n  function addTableResizeObserver(tableElement: HTMLDivElement) {\n    if (typeof window === 'undefined') return;\n    // IE 11 以下使用 window resize；IE 11 以上使用 ResizeObserver\n    if (getIEVersion() < 11 || typeof window.ResizeObserver === 'undefined') return;\n    off(window, 'resize', onResize);\n    resizeObserver = new window.ResizeObserver(() => {\n      const timer = setTimeout(() => {\n        refreshTable();\n        clearTimeout(timer);\n      }, 200);\n    });\n    resizeObserver.observe(tableElement);\n    tableRef.value = tableElement;\n  }\n\n  onMounted(() => {\n    const scrollWidth = getScrollbarWidthWithCSS();\n    scrollbarWidth.value = scrollWidth;\n    updateThWidthListHandler();\n    const isWatchResize = isFixedColumn.value || isFixedHeader.value || !notNeedThWidthList.value || !data.value.length;\n    // IE 11 以下使用 window resize；IE 11 以上使用 ResizeObserver\n    const hasWindow = typeof window !== 'undefined';\n    const hasResizeObserver = hasWindow && typeof window.ResizeObserver !== 'undefined';\n    if ((isWatchResize && getIEVersion() < 11) || !hasResizeObserver) {\n      on(window, 'resize', onResize);\n    }\n  });\n\n  onBeforeUnmount(() => {\n    if (typeof window !== 'undefined') {\n      off(window, 'resize', onResize);\n    }\n    resizeObserver?.unobserve(tableRef.value);\n    resizeObserver?.disconnect();\n  });\n\n  const setData = (dataSource: TableRowData[]) => {\n    data.value = dataSource;\n  };\n\n  const updateTableAfterColumnResize = () => {\n    updateFixedStatus();\n    updateFixedHeader();\n  };\n\n  return {\n    tableWidth,\n    tableElmWidth,\n    thWidthList,\n    isFixedHeader,\n    isWidthOverflow,\n    tableContentRef,\n    isFixedColumn,\n    showColumnShadow,\n    rowAndColFixedPosition,\n    virtualScrollHeaderPos,\n    scrollbarWidth,\n    setData,\n    refreshTable,\n    setTableElmWidth,\n    emitScrollEvent,\n    updateThWidthListHandler,\n    updateColumnFixedShadow,\n    setUseFixedTableElmRef,\n    getThWidthList,\n    updateThWidthList,\n    addTableResizeObserver,\n    updateTableAfterColumnResize,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}