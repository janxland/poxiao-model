{"ast":null,"code":"/**\n * tdesign v1.9.3\n * (c) 2024 tdesign\n * @license MIT\n */\n\nimport { isVNode, h } from 'vue';\nimport { i as isEmpty_1 } from '../_chunks/dep-bc75f95c.mjs';\nimport { i as isString_1 } from '../_chunks/dep-5d7be5c6.mjs';\nimport { i as isFunction_1 } from '../_chunks/dep-6e7655db.mjs';\nimport { i as isObject_1 } from '../_chunks/dep-62ad5a36.mjs';\nimport { c as camelCase_1 } from '../_chunks/dep-190cc0b3.mjs';\nimport { k as kebabCase_1 } from '../_chunks/dep-1c9d9f8d.mjs';\nimport '../_chunks/dep-437d10c6.mjs';\nimport '../_chunks/dep-6ea85de8.mjs';\nimport '../_chunks/dep-0ced8e2e.mjs';\nimport '../_chunks/dep-6ad32365.mjs';\nimport '../_chunks/dep-d33c5d88.mjs';\nimport '../_chunks/dep-fb9941c5.mjs';\nimport '../_chunks/dep-4382b808.mjs';\nimport '../_chunks/dep-75628739.mjs';\nimport '../_chunks/dep-1494b54a.mjs';\nimport '../_chunks/dep-c70e40ae.mjs';\nimport '../_chunks/dep-f76ec896.mjs';\nimport '../_chunks/dep-92ce9c6c.mjs';\nimport '../_chunks/dep-e3204123.mjs';\nimport '../_chunks/dep-10c900d8.mjs';\nimport '../_chunks/dep-1c5d24dd.mjs';\nimport '../_chunks/dep-003c9b00.mjs';\nimport '../_chunks/dep-e98ea432.mjs';\nimport '../_chunks/dep-29a308fc.mjs';\nimport '../_chunks/dep-18af437d.mjs';\nimport '../_chunks/dep-28a28c00.mjs';\nfunction getDefaultNode(options) {\n  var defaultNode;\n  if (isObject_1(options) && \"defaultNode\" in options) {\n    defaultNode = options.defaultNode;\n  } else if (isVNode(options) || isString_1(options)) {\n    defaultNode = options;\n  }\n  return defaultNode;\n}\nfunction getParams(options) {\n  return isObject_1(options) && \"params\" in options ? options.params : {};\n}\nfunction getSlotFirst(options) {\n  return isObject_1(options) && \"slotFirst\" in options ? options.slotFirst : {};\n}\nfunction handleSlots(instance, params, name) {\n  var _instance$$slots$came, _instance$$slots, _instance$$slots$keba, _instance$$slots2;\n  var node = (_instance$$slots$came = (_instance$$slots = instance.$slots)[camelCase_1(name)]) === null || _instance$$slots$came === void 0 ? void 0 : _instance$$slots$came.call(_instance$$slots, params);\n  if (node) return node;\n  node = (_instance$$slots$keba = (_instance$$slots2 = instance.$slots)[kebabCase_1(name)]) === null || _instance$$slots$keba === void 0 ? void 0 : _instance$$slots$keba.call(_instance$$slots2, params);\n  if (node) return node;\n  return null;\n}\nvar renderTNodeJSX = function renderTNodeJSX(instance, name, options) {\n  var params = getParams(options);\n  var defaultNode = getDefaultNode(options);\n  var propsNode;\n  if (name in instance) {\n    propsNode = instance[name];\n  }\n  if (propsNode === false || propsNode === null) return;\n  if (propsNode === true && defaultNode) {\n    return handleSlots(instance, params, name) || defaultNode;\n  }\n  if (isFunction_1(propsNode)) return propsNode(h, params);\n  var isPropsEmpty = [void 0, params, \"\"].includes(propsNode);\n  if (isPropsEmpty && (instance.$slots[camelCase_1(name)] || instance.$slots[kebabCase_1(name)])) {\n    return handleSlots(instance, params, name);\n  }\n  return propsNode;\n};\nvar renderTNodeJSXDefault = function renderTNodeJSXDefault(vm, name, options) {\n  var defaultNode = getDefaultNode(options);\n  return renderTNodeJSX(vm, name, options) || defaultNode;\n};\nvar renderContent = function renderContent(vm, name1, name2, options) {\n  var params = getParams(options);\n  var defaultNode = getDefaultNode(options);\n  var toParams = params ? {\n    params: params\n  } : void 0;\n  var node1 = renderTNodeJSX(vm, name1, toParams);\n  var node2 = renderTNodeJSX(vm, name2, toParams);\n  var res = isEmpty_1(node1) ? node2 : node1;\n  return isEmpty_1(res) ? defaultNode : res;\n};\nexport { getDefaultNode, getParams, getSlotFirst, handleSlots, renderContent, renderTNodeJSX, renderTNodeJSXDefault };","map":{"version":3,"names":["getDefaultNode","options","defaultNode","isObject_1","isVNode","isString_1","getParams","params","getSlotFirst","slotFirst","handleSlots","instance","name","_instance$$slots$came","_instance$$slots","_instance$$slots$keba","_instance$$slots2","node","$slots","camelCase_1","call","kebabCase_1","renderTNodeJSX","propsNode","isFunction_1","h","isPropsEmpty","includes","renderTNodeJSXDefault","vm","renderContent","name1","name2","toParams","node1","node2","res","isEmpty_1"],"sources":["../../src/utils/render-tnode.ts"],"sourcesContent":["import { h, ComponentPublicInstance, VNode, isVNode } from 'vue';\nimport isEmpty from 'lodash/isEmpty';\nimport isString from 'lodash/isString';\nimport isFunction from 'lodash/isFunction';\nimport isObject from 'lodash/isObject';\nimport camelCase from 'lodash/camelCase';\nimport kebabCase from 'lodash/kebabCase';\n\nexport interface JSXRenderContext {\n  defaultNode?: VNode | string;\n  params?: Record<string, any>;\n  slotFirst?: boolean;\n  // 是否不打印 LOG\n  silent?: boolean;\n}\n\nexport type OptionsType = VNode | JSXRenderContext | string;\n\nexport function getDefaultNode(options?: OptionsType) {\n  let defaultNode;\n  if (isObject(options) && 'defaultNode' in options) {\n    defaultNode = options.defaultNode;\n  } else if (isVNode(options) || isString(options)) {\n    defaultNode = options;\n  }\n\n  return defaultNode;\n}\n\nexport function getParams(options?: OptionsType) {\n  return isObject(options) && 'params' in options ? options.params : {};\n}\n\nexport function getSlotFirst(options?: OptionsType) {\n  return isObject(options) && 'slotFirst' in options ? options.slotFirst : {};\n}\n\n// 同时支持驼峰命名和中划线命名的插槽，示例：value-display 和 valueDisplay\nexport function handleSlots(instance: ComponentPublicInstance, params: Record<string, any>, name: string) {\n  // 检查是否存在 驼峰命名 的插槽\n  let node = instance.$slots[camelCase(name)]?.(params);\n  if (node) return node;\n  // 检查是否存在 中划线命名 的插槽\n  node = instance.$slots[kebabCase(name)]?.(params);\n  if (node) return node;\n  return null;\n}\n\n/**\n * 通过JSX的方式渲染 TNode，props 和 插槽同时处理，也能处理默认值为 true 则渲染默认节点的情况\n * @param vm 组件实例\n * @param name 插槽和属性名称\n * @param options 值可能为默认渲染节点，也可能是默认渲染节点和参数的集合\n * @example renderTNodeJSX(this, 'closeBtn')  优先级 props function 大于 插槽\n * @example renderTNodeJSX(this, 'closeBtn', <close-icon />)。 当属性值为 true 时则渲染 <close-icon />\n * @example renderTNodeJSX(this, 'closeBtn', { defaultNode: <close-icon />, params })。 params 为渲染节点时所需的参数\n */\nexport const renderTNodeJSX = (instance: ComponentPublicInstance, name: string, options?: OptionsType) => {\n  // assemble params && defaultNode\n  const params = getParams(options);\n  const defaultNode = getDefaultNode(options);\n\n  // 处理 props 类型的Node\n  let propsNode;\n  if (name in instance) {\n    propsNode = instance[name];\n  }\n\n  // 是否静默日志\n  // const isSilent = Boolean(isObject(options) && 'silent' in options && options.silent);\n  // // 同名插槽和属性同时存在，则提醒用户只需要选择一种方式即可\n  // if (instance.$slots[name] && propsNode && propsNode !== true && !isSilent) {\n  //   console.warn(`Both $slots.${name} and $props.${name} exist, $props.${name} is preferred`);\n  // }\n\n  // propsNode 为 false 不渲染\n  if (propsNode === false || propsNode === null) return;\n  if (propsNode === true && defaultNode) {\n    return handleSlots(instance, params, name) || defaultNode;\n  }\n\n  // 同名 props 和 slot 优先处理 props\n  if (isFunction(propsNode)) return propsNode(h, params);\n  const isPropsEmpty = [undefined, params, ''].includes(propsNode);\n  // Props 为空，但插槽存在\n  if (isPropsEmpty && (instance.$slots[camelCase(name)] || instance.$slots[kebabCase(name)])) {\n    return handleSlots(instance, params, name);\n  }\n  return propsNode;\n};\n\n/**\n * 通过JSX的方式渲染 TNode，props 和 插槽同时处理。与 renderTNodeJSX 区别在于 属性值为 undefined 时会渲染默认节点\n * @param vm 组件实例\n * @param name 插槽和属性名称\n * @example renderTNodeJSX(this, 'closeBtn')\n * @example renderTNodeJSX(this, 'closeBtn', <close-icon />)。this.closeBtn 为空时，则兜底渲染 <close-icon />\n * @example renderTNodeJSX(this, 'closeBtn', { defaultNode: <close-icon />, params }) 。params 为渲染节点时所需的参数\n */\nexport const renderTNodeJSXDefault = (vm: ComponentPublicInstance, name: string, options?: OptionsType) => {\n  const defaultNode = getDefaultNode(options);\n  return renderTNodeJSX(vm, name, options) || defaultNode;\n};\n\n/**\n * 用于处理相同名称的 TNode 渲染\n * @param vm 组件实例\n * @param name1 第一个名称，优先级高于 name2\n * @param name2 第二个名称\n * @param defaultNode 默认渲染内容：当 name1 和 name2 都为空时会启动默认内容渲染\n * @example renderContent(this, 'default', 'content')\n * @example renderContent(this, 'default', 'content', '我是默认内容')\n * @example renderContent(this, 'default', 'content', { defaultNode: '我是默认内容', params })\n */\nexport const renderContent = (vm: ComponentPublicInstance, name1: string, name2: string, options?: OptionsType) => {\n  const params = getParams(options);\n  const defaultNode = getDefaultNode(options);\n\n  const toParams = params ? { params } : undefined;\n\n  const node1 = renderTNodeJSX(vm, name1, toParams);\n  const node2 = renderTNodeJSX(vm, name2, toParams);\n\n  const res = isEmpty(node1) ? node2 : node1;\n  return isEmpty(res) ? defaultNode : res;\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBO,SAASA,eAAeC,OAAuB;EAChD,IAAAC,WAAA;EACJ,IAAIC,UAAS,CAAAF,OAAO,CAAK,qBAAiBA,OAAS;IACjDC,WAAA,GAAcD,OAAQ,CAAAC,WAAA;aACbE,OAAQ,CAAAH,OAAO,CAAK,IAAAI,UAAA,CAASJ,OAAO,CAAG;IAClCC,WAAA,GAAAD,OAAA;EAChB;EAEO,OAAAC,WAAA;AACT;AAEO,SAASI,UAAUL,OAAuB;EAC/C,OAAOE,UAAA,CAASF,OAAO,KAAK,YAAYA,OAAU,GAAAA,OAAA,CAAQM,MAAA,GAAS,EAAC;AACtE;AAEO,SAASC,aAAaP,OAAuB;EAClD,OAAOE,UAAA,CAASF,OAAO,KAAK,eAAeA,OAAU,GAAAA,OAAA,CAAQQ,SAAA,GAAY,EAAC;AAC5E;AAGgB,SAAAC,YAAYC,QAAmC,EAAAJ,MAAA,EAA6BK,IAAc;EAAA,IAAAC,qBAAA,EAAAC,gBAAA,EAAAC,qBAAA,EAAAC,iBAAA;EAExG,IAAIC,IAAA,IAAAJ,qBAAA,GAAO,CAAAC,gBAAA,GAAAH,QAAS,CAAAO,MAAA,EAAOC,WAAU,CAAAP,IAAI,gBAAAC,qBAAA,KAA9B,kBAAAA,qBAAA,CAAAO,IAAA,CAAAN,gBAAA,EAAmCP,MAAM;EAChD,IAAAU,IAAA,EAAa,OAAAA,IAAA;EAEjBA,IAAA,IAAAF,qBAAA,GAAO,CAAAC,iBAAA,GAAAL,QAAS,CAAAO,MAAA,EAAOG,WAAU,CAAAT,IAAI,gBAAAG,qBAAA,KAA9B,kBAAAA,qBAAA,CAAAK,IAAA,CAAAJ,iBAAA,EAAmCT,MAAM;EAC5C,IAAAU,IAAA,EAAa,OAAAA,IAAA;EACV;AACT;AAWO,IAAMK,cAAiB,YAAjBA,cAAiBA,CAACX,QAAmC,EAAAC,IAAA,EAAcX,OAA0B;EAElG,IAAAM,MAAA,GAASD,SAAA,CAAUL,OAAO;EAC1B,IAAAC,WAAA,GAAcF,cAAA,CAAeC,OAAO;EAGtC,IAAAsB,SAAA;EACJ,IAAIX,IAAA,IAAQD,QAAU;IACpBY,SAAA,GAAYZ,QAAS,CAAAC,IAAA;EACvB;EAUI,IAAAW,SAAA,KAAc,SAASA,SAAc,WAAM;EAC3C,IAAAA,SAAA,KAAc,QAAQrB,WAAa;IACrC,OAAOQ,WAAY,CAAAC,QAAA,EAAUJ,MAAQ,EAAAK,IAAI,CAAK,IAAAV,WAAA;EAChD;EAGA,IAAIsB,YAAA,CAAWD,SAAS,GAAU,OAAAA,SAAA,CAAUE,CAAA,EAAGlB,MAAM;EACrD,IAAMmB,YAAA,GAAe,CAAC,QAAWnB,MAAA,EAAQ,EAAE,EAAEoB,QAAA,CAASJ,SAAS;EAE3D,IAAAG,YAAA,KAAiBf,QAAS,CAAAO,MAAA,CAAOC,WAAU,CAAAP,IAAI,MAAMD,QAAS,CAAAO,MAAA,CAAOG,WAAU,CAAAT,IAAI,CAAK;IACnF,OAAAF,WAAA,CAAYC,QAAU,EAAAJ,MAAA,EAAQK,IAAI;EAC3C;EACO,OAAAW,SAAA;AACT;AAUO,IAAMK,qBAAwB,YAAxBA,qBAAwBA,CAACC,EAA6B,EAAAjB,IAAA,EAAcX,OAA0B;EACnG,IAAAC,WAAA,GAAcF,cAAA,CAAeC,OAAO;EAC1C,OAAOqB,cAAe,CAAAO,EAAA,EAAIjB,IAAM,EAAAX,OAAO,CAAK,IAAAC,WAAA;AAC9C;AAYa,IAAA4B,aAAgB,YAAhBA,aAAgBA,CAACD,EAA6B,EAAAE,KAAA,EAAeC,KAAA,EAAe/B,OAA0B;EAC3G,IAAAM,MAAA,GAASD,SAAA,CAAUL,OAAO;EAC1B,IAAAC,WAAA,GAAcF,cAAA,CAAeC,OAAO;EAE1C,IAAMgC,QAAW,GAAA1B,MAAA,GAAS;IAAEA,MAAA,EAAAA;GAAW;EAEvC,IAAM2B,KAAQ,GAAAZ,cAAA,CAAeO,EAAI,EAAAE,KAAA,EAAOE,QAAQ;EAChD,IAAME,KAAQ,GAAAb,cAAA,CAAeO,EAAI,EAAAG,KAAA,EAAOC,QAAQ;EAEhD,IAAMG,GAAM,GAAAC,SAAA,CAAQH,KAAK,IAAIC,KAAQ,GAAAD,KAAA;EAC9B,OAAAG,SAAA,CAAQD,GAAG,IAAIlC,WAAc,GAAAkC,GAAA;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}