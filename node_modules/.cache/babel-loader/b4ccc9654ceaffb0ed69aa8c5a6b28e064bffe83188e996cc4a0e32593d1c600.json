{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * tdesign v1.9.0\n * (c) 2024 tdesign\n * @license MIT\n */\n\nimport { c as cloneDeep_1 } from '../_chunks/dep-37e3e644.mjs';\nimport '../_chunks/dep-cb814df4.mjs';\nimport '../_chunks/dep-31dc0415.mjs';\nimport '../_chunks/dep-e5142249.mjs';\nimport '../_chunks/dep-c4f80cb4.mjs';\nimport '../_chunks/dep-996b4900.mjs';\nimport '../_chunks/dep-66473aa9.mjs';\nimport '../_chunks/dep-cd533155.mjs';\nimport '../_chunks/dep-8dbc9855.mjs';\nimport '../_chunks/dep-715774e0.mjs';\nimport '../_chunks/dep-5a5a1764.mjs';\nimport '../_chunks/dep-3108c312.mjs';\nimport '../_chunks/dep-93498383.mjs';\nimport '../_chunks/dep-36582a92.mjs';\nimport '../_chunks/dep-a2db6df1.mjs';\nimport '../_chunks/dep-0f89a1dd.mjs';\nimport '../_chunks/dep-2adf18a2.mjs';\nimport '../_chunks/dep-ab439391.mjs';\nimport '../_chunks/dep-60d62610.mjs';\nimport '../_chunks/dep-d4da440a.mjs';\nimport '../_chunks/dep-013382c3.mjs';\nimport '../_chunks/dep-ca764006.mjs';\nimport '../_chunks/dep-2ee9d497.mjs';\nimport '../_chunks/dep-c545db54.mjs';\nimport '../_chunks/dep-3f15cb30.mjs';\nimport '../_chunks/dep-fd2b6c64.mjs';\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nvar selectInjectKey = Symbol(\"selectProvide\");\nvar getSingleContent = function getSingleContent(value, optionsMap) {\n  var option = optionsMap.value.get(value);\n  return (option === null || option === void 0 ? void 0 : option.label) || (value === null || value === void 0 ? void 0 : value.toString());\n};\nvar getMultipleContent = function getMultipleContent(value, optionsMap) {\n  var res = [];\n  var _iterator = _createForOfIteratorHelper(value),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var iterator = _step.value;\n      var resLabel = getSingleContent(iterator, optionsMap);\n      if (resLabel) {\n        res.push(resLabel);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return res;\n};\nvar getNewMultipleValue = function getNewMultipleValue(innerValue, optionValue) {\n  var value = cloneDeep_1(innerValue);\n  var valueIndex = value.indexOf(optionValue);\n  if (valueIndex < 0) {\n    value.push(optionValue);\n  } else {\n    value.splice(valueIndex, 1);\n  }\n  return {\n    value: value,\n    isCheck: valueIndex < 0\n  };\n};\nexport { getMultipleContent, getNewMultipleValue, getSingleContent, selectInjectKey };","map":{"version":3,"names":["selectInjectKey","Symbol","getSingleContent","value","optionsMap","option","get","label","toString","getMultipleContent","res","_iterator","_createForOfIteratorHelper","_step","s","n","done","iterator","resLabel","push","err","e","f","getNewMultipleValue","innerValue","optionValue","cloneDeep_1","valueIndex","indexOf","splice","isCheck"],"sources":["../../src/select/helper.ts"],"sourcesContent":["import { InjectionKey, ComputedRef } from 'vue';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { TdSelectProps, TdOptionProps, SelectValue, SelectOption } from './type';\n\nexport const selectInjectKey: InjectionKey<\n  ComputedRef<{\n    hoverIndex: number;\n    selectValue: TdSelectProps['value'];\n    size: TdSelectProps['size'];\n    max: TdSelectProps['max'];\n    reserveKeyword: TdSelectProps['reserveKeyword'];\n    multiple: TdSelectProps['multiple'];\n    handleValueChange: TdSelectProps['onChange'];\n    handleCreate: TdSelectProps['onCreate'];\n    handlerInputChange: TdSelectProps['onInputChange'];\n    handlePopupVisibleChange: TdSelectProps['onPopupVisibleChange'];\n    popupContentRef: ComputedRef<HTMLElement>;\n    indeterminate: boolean;\n    isCheckAll: boolean;\n    onCheckAllChange: (checked: boolean) => void;\n    getSelectedOptions: (selectValue?: SelectValue[] | SelectValue) => TdOptionProps[];\n    displayOptions: TdSelectProps['options'];\n  }>\n> = Symbol('selectProvide');\n\nexport const getSingleContent = (\n  value: TdSelectProps['value'],\n  optionsMap: ComputedRef<Map<SelectValue<SelectOption>, TdOptionProps>>,\n): string => {\n  const option = optionsMap.value.get(value);\n  return option?.label || value?.toString();\n};\n\nexport const getMultipleContent = (\n  value: SelectValue[],\n  optionsMap: ComputedRef<Map<SelectValue<SelectOption>, TdOptionProps>>,\n) => {\n  const res = [];\n  for (const iterator of value) {\n    const resLabel = getSingleContent(iterator, optionsMap);\n    if (resLabel) {\n      res.push(resLabel);\n    }\n  }\n  return res;\n};\n\nexport const getNewMultipleValue = (innerValue: SelectValue[], optionValue: SelectValue) => {\n  const value = cloneDeep(innerValue) as SelectValue[];\n  const valueIndex = value.indexOf(optionValue);\n  if (valueIndex < 0) {\n    value.push(optionValue);\n  } else {\n    value.splice(valueIndex, 1);\n  }\n  return {\n    value,\n    isCheck: valueIndex < 0,\n  };\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAIaA,eAAA,GAmBTC,MAAA,CAAO,eAAe;AAEb,IAAAC,gBAAA,GAAmB,SAAnBA,iBACXC,KAAA,EACAC,UACW;EACX,IAAMC,MAAS,GAAAD,UAAA,CAAWD,KAAM,CAAAG,GAAA,CAAIH,KAAK;EAClC,QAAAE,MAAA,aAAAA,MAAA,uBAAAA,MAAA,CAAQE,KAAS,MAAAJ,KAAA,aAAAA,KAAA,uBAAAA,KAAA,CAAOK,QAAS;AAC1C;AAEa,IAAAC,kBAAA,GAAqB,SAArBA,mBACXN,KAAA,EACAC,UACG;EACH,IAAMM,GAAA,GAAM,EAAC;EAAA,IAAAC,SAAA,GAAAC,0BAAA,CACUT,KAAO;IAAAU,KAAA;EAAA;IAA9B,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAA8B;MAAA,IAAnBC,QAAA,GAAAJ,KAAA,CAAAV,KAAA;MACH,IAAAe,QAAA,GAAWhB,gBAAiB,CAAAe,QAAA,EAAUb,UAAU;MACtD,IAAIc,QAAU;QACZR,GAAA,CAAIS,IAAA,CAAKD,QAAQ;MACnB;IACF;EAAA,SAAAE,GAAA;IAAAT,SAAA,CAAAU,CAAA,CAAAD,GAAA;EAAA;IAAAT,SAAA,CAAAW,CAAA;EAAA;EACO,OAAAZ,GAAA;AACT;AAEa,IAAAa,mBAAA,GAAsB,SAAtBA,oBAAuBC,UAAA,EAA2BC,WAA6B;EACpF,IAAAtB,KAAA,GAAQuB,WAAA,CAAUF,UAAU;EAC5B,IAAAG,UAAA,GAAaxB,KAAM,CAAAyB,OAAA,CAAQH,WAAW;EAC5C,IAAIE,UAAA,GAAa,CAAG;IAClBxB,KAAA,CAAMgB,IAAA,CAAKM,WAAW;EACxB,CAAO;IACCtB,KAAA,CAAA0B,MAAA,CAAOF,UAAA,EAAY,CAAC;EAC5B;EACO;IACLxB,KAAA,EAAAA,KAAA;IACA2B,OAAA,EAASH,UAAa;GACxB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}